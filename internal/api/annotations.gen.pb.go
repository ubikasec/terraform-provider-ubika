// Code generated by protoc-gen-api-client. DO NOT EDIT.
package api

import (
	fmt "fmt"
	strings "strings"
)

const kindRusService = "RusService"
const kindAuthz = "Authz"
const kindRusMethod = "RusMethod"
const kindRusMessage = "RusMessage"

func (e NamespacePermission) MarshalText() (text []byte, err error) {
	s := e.String()
	if strings.HasPrefix(s, "NAMESPACE_PERMISSION_") {
		s = s[21:]
	}
	return []byte(s), nil
}

func (e *NamespacePermission) UnmarshalText(text []byte) error {
	repr := string(text)
	val, ok := NamespacePermission_value[repr]
	if !ok {
		if !strings.HasPrefix(repr, "NAMESPACE_PERMISSION_") {
			repr = "NAMESPACE_PERMISSION_" + repr
			val, ok = NamespacePermission_value[repr]
		}
	}
	if !ok {
		return fmt.Errorf("unrecognized enum NamespacePermission value %q", repr)
	}
	*e = NamespacePermission(val)
	return nil
}

func (e MessageType) MarshalText() (text []byte, err error) {
	s := e.String()
	if strings.HasPrefix(s, "MESSAGE_TYPE_") {
		s = s[13:]
	}
	return []byte(s), nil
}

func (e *MessageType) UnmarshalText(text []byte) error {
	repr := string(text)
	val, ok := MessageType_value[repr]
	if !ok {
		if !strings.HasPrefix(repr, "MESSAGE_TYPE_") {
			repr = "MESSAGE_TYPE_" + repr
			val, ok = MessageType_value[repr]
		}
	}
	if !ok {
		return fmt.Errorf("unrecognized enum MessageType value %q", repr)
	}
	*e = MessageType(val)
	return nil
}
