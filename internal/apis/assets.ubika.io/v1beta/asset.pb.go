// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.3
// source: lib/proto/assets.ubika.io/v1beta/asset.proto

package v1beta

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/ubikasec/terraform-provider-ubika/internal/api"
	v1beta "github.com/ubikasec/terraform-provider-ubika/internal/apis/meta/v1beta"
	crypto "github.com/ubikasec/terraform-provider-ubika/internal/crypto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SecurityMode_Enum int32

const (
	// TODO: UNSPECIFIED
	SecurityMode_BLOCK SecurityMode_Enum = 0
	// Deprecated: compatibility alias
	SecurityMode_SECURITY_MODE_BLOCK SecurityMode_Enum = 0
	SecurityMode_REPORT              SecurityMode_Enum = 1
	// Deprecated: compatibility alias
	SecurityMode_SECURITY_MODE_REPORT SecurityMode_Enum = 1
)

// Enum value maps for SecurityMode_Enum.
var (
	SecurityMode_Enum_name = map[int32]string{
		0: "BLOCK",
		// Duplicate value: 0: "SECURITY_MODE_BLOCK",
		1: "REPORT",
		// Duplicate value: 1: "SECURITY_MODE_REPORT",
	}
	SecurityMode_Enum_value = map[string]int32{
		"BLOCK":                0,
		"SECURITY_MODE_BLOCK":  0,
		"REPORT":               1,
		"SECURITY_MODE_REPORT": 1,
	}
)

func (x SecurityMode_Enum) Enum() *SecurityMode_Enum {
	p := new(SecurityMode_Enum)
	*p = x
	return p
}

func (x SecurityMode_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecurityMode_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[0].Descriptor()
}

func (SecurityMode_Enum) Type() protoreflect.EnumType {
	return &file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[0]
}

func (x SecurityMode_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecurityMode_Enum.Descriptor instead.
func (SecurityMode_Enum) EnumDescriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{0, 0}
}

type WebSocketSecurityMode_Enum int32

const (
	WebSocketSecurityMode_UNSPECIFIED WebSocketSecurityMode_Enum = 0
	// Deprecated: compatibility alias
	WebSocketSecurityMode_WEB_SOCKET_SECURITY_MODE_UNSPECIFIED WebSocketSecurityMode_Enum = 0
	WebSocketSecurityMode_CLOSE                                WebSocketSecurityMode_Enum = 1
	// Deprecated: compatibility alias
	WebSocketSecurityMode_WEB_SOCKET_SECURITY_MODE_CLOSE WebSocketSecurityMode_Enum = 1
	WebSocketSecurityMode_DROP                           WebSocketSecurityMode_Enum = 2
	// Deprecated: compatibility alias
	WebSocketSecurityMode_WEB_SOCKET_SECURITY_MODE_DROP WebSocketSecurityMode_Enum = 2
	WebSocketSecurityMode_REPORT                        WebSocketSecurityMode_Enum = 3
	// Deprecated: compatibility alias
	WebSocketSecurityMode_WEB_SOCKET_SECURITY_MODE_REPORT WebSocketSecurityMode_Enum = 3
)

// Enum value maps for WebSocketSecurityMode_Enum.
var (
	WebSocketSecurityMode_Enum_name = map[int32]string{
		0: "UNSPECIFIED",
		// Duplicate value: 0: "WEB_SOCKET_SECURITY_MODE_UNSPECIFIED",
		1: "CLOSE",
		// Duplicate value: 1: "WEB_SOCKET_SECURITY_MODE_CLOSE",
		2: "DROP",
		// Duplicate value: 2: "WEB_SOCKET_SECURITY_MODE_DROP",
		3: "REPORT",
		// Duplicate value: 3: "WEB_SOCKET_SECURITY_MODE_REPORT",
	}
	WebSocketSecurityMode_Enum_value = map[string]int32{
		"UNSPECIFIED":                          0,
		"WEB_SOCKET_SECURITY_MODE_UNSPECIFIED": 0,
		"CLOSE":                                1,
		"WEB_SOCKET_SECURITY_MODE_CLOSE":       1,
		"DROP":                                 2,
		"WEB_SOCKET_SECURITY_MODE_DROP":        2,
		"REPORT":                               3,
		"WEB_SOCKET_SECURITY_MODE_REPORT":      3,
	}
)

func (x WebSocketSecurityMode_Enum) Enum() *WebSocketSecurityMode_Enum {
	p := new(WebSocketSecurityMode_Enum)
	*p = x
	return p
}

func (x WebSocketSecurityMode_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebSocketSecurityMode_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[1].Descriptor()
}

func (WebSocketSecurityMode_Enum) Type() protoreflect.EnumType {
	return &file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[1]
}

func (x WebSocketSecurityMode_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebSocketSecurityMode_Enum.Descriptor instead.
func (WebSocketSecurityMode_Enum) EnumDescriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{10, 0}
}

type IPReputationThreat_Enum int32

const (
	IPReputationThreat_UNSPECIFIED IPReputationThreat_Enum = 0
	// Deprecated: compatibility alias
	IPReputationThreat_IP_REPUTATION_THREAT_UNSPECIFIED IPReputationThreat_Enum = 0
	IPReputationThreat_SPAM_SOURCE                      IPReputationThreat_Enum = 1
	// Deprecated: compatibility alias
	IPReputationThreat_IP_REPUTATION_THREAT_SPAM_SOURCE IPReputationThreat_Enum = 1
	IPReputationThreat_WINDOWS_EXPLOIT                  IPReputationThreat_Enum = 2
	// Deprecated: compatibility alias
	IPReputationThreat_IP_REPUTATION_THREAT_WINDOWS_EXPLOIT IPReputationThreat_Enum = 2
	IPReputationThreat_WEB_ATTACKS                          IPReputationThreat_Enum = 3
	// Deprecated: compatibility alias
	IPReputationThreat_IP_REPUTATION_THREAT_WEB_ATTACKS IPReputationThreat_Enum = 3
	IPReputationThreat_BOTNETS                          IPReputationThreat_Enum = 4
	// Deprecated: compatibility alias
	IPReputationThreat_IP_REPUTATION_THREAT_BOTNETS IPReputationThreat_Enum = 4
	IPReputationThreat_SCANNERS                     IPReputationThreat_Enum = 5
	// Deprecated: compatibility alias
	IPReputationThreat_IP_REPUTATION_THREAT_SCANNERS IPReputationThreat_Enum = 5
	IPReputationThreat_DENIAL_OF_SERVICE             IPReputationThreat_Enum = 6
	// Deprecated: compatibility alias
	IPReputationThreat_IP_REPUTATION_THREAT_DENIAL_OF_SERVICE IPReputationThreat_Enum = 6
	IPReputationThreat_REPUTATION                             IPReputationThreat_Enum = 7
	// Deprecated: compatibility alias
	IPReputationThreat_IP_REPUTATION_THREAT_REPUTATION IPReputationThreat_Enum = 7
	IPReputationThreat_PHISHING                        IPReputationThreat_Enum = 8
	// Deprecated: compatibility alias
	IPReputationThreat_IP_REPUTATION_THREAT_PHISHING IPReputationThreat_Enum = 8
	IPReputationThreat_PROXY                         IPReputationThreat_Enum = 9
	// Deprecated: compatibility alias
	IPReputationThreat_IP_REPUTATION_THREAT_PROXY IPReputationThreat_Enum = 9
	IPReputationThreat_MOBILE_THREATS             IPReputationThreat_Enum = 10
	// Deprecated: compatibility alias
	IPReputationThreat_IP_REPUTATION_THREAT_MOBILE_THREATS IPReputationThreat_Enum = 10
	IPReputationThreat_TOR_PROXY                           IPReputationThreat_Enum = 11
	// Deprecated: compatibility alias
	IPReputationThreat_IP_REPUTATION_THREAT_TOR_PROXY IPReputationThreat_Enum = 11
)

// Enum value maps for IPReputationThreat_Enum.
var (
	IPReputationThreat_Enum_name = map[int32]string{
		0: "UNSPECIFIED",
		// Duplicate value: 0: "IP_REPUTATION_THREAT_UNSPECIFIED",
		1: "SPAM_SOURCE",
		// Duplicate value: 1: "IP_REPUTATION_THREAT_SPAM_SOURCE",
		2: "WINDOWS_EXPLOIT",
		// Duplicate value: 2: "IP_REPUTATION_THREAT_WINDOWS_EXPLOIT",
		3: "WEB_ATTACKS",
		// Duplicate value: 3: "IP_REPUTATION_THREAT_WEB_ATTACKS",
		4: "BOTNETS",
		// Duplicate value: 4: "IP_REPUTATION_THREAT_BOTNETS",
		5: "SCANNERS",
		// Duplicate value: 5: "IP_REPUTATION_THREAT_SCANNERS",
		6: "DENIAL_OF_SERVICE",
		// Duplicate value: 6: "IP_REPUTATION_THREAT_DENIAL_OF_SERVICE",
		7: "REPUTATION",
		// Duplicate value: 7: "IP_REPUTATION_THREAT_REPUTATION",
		8: "PHISHING",
		// Duplicate value: 8: "IP_REPUTATION_THREAT_PHISHING",
		9: "PROXY",
		// Duplicate value: 9: "IP_REPUTATION_THREAT_PROXY",
		10: "MOBILE_THREATS",
		// Duplicate value: 10: "IP_REPUTATION_THREAT_MOBILE_THREATS",
		11: "TOR_PROXY",
		// Duplicate value: 11: "IP_REPUTATION_THREAT_TOR_PROXY",
	}
	IPReputationThreat_Enum_value = map[string]int32{
		"UNSPECIFIED":                            0,
		"IP_REPUTATION_THREAT_UNSPECIFIED":       0,
		"SPAM_SOURCE":                            1,
		"IP_REPUTATION_THREAT_SPAM_SOURCE":       1,
		"WINDOWS_EXPLOIT":                        2,
		"IP_REPUTATION_THREAT_WINDOWS_EXPLOIT":   2,
		"WEB_ATTACKS":                            3,
		"IP_REPUTATION_THREAT_WEB_ATTACKS":       3,
		"BOTNETS":                                4,
		"IP_REPUTATION_THREAT_BOTNETS":           4,
		"SCANNERS":                               5,
		"IP_REPUTATION_THREAT_SCANNERS":          5,
		"DENIAL_OF_SERVICE":                      6,
		"IP_REPUTATION_THREAT_DENIAL_OF_SERVICE": 6,
		"REPUTATION":                             7,
		"IP_REPUTATION_THREAT_REPUTATION":        7,
		"PHISHING":                               8,
		"IP_REPUTATION_THREAT_PHISHING":          8,
		"PROXY":                                  9,
		"IP_REPUTATION_THREAT_PROXY":             9,
		"MOBILE_THREATS":                         10,
		"IP_REPUTATION_THREAT_MOBILE_THREATS":    10,
		"TOR_PROXY":                              11,
		"IP_REPUTATION_THREAT_TOR_PROXY":         11,
	}
)

func (x IPReputationThreat_Enum) Enum() *IPReputationThreat_Enum {
	p := new(IPReputationThreat_Enum)
	*p = x
	return p
}

func (x IPReputationThreat_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IPReputationThreat_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[2].Descriptor()
}

func (IPReputationThreat_Enum) Type() protoreflect.EnumType {
	return &file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[2]
}

func (x IPReputationThreat_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IPReputationThreat_Enum.Descriptor instead.
func (IPReputationThreat_Enum) EnumDescriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{12, 0}
}

type GeoIPMode_Enum int32

const (
	GeoIPMode_UNSPECIFIED GeoIPMode_Enum = 0
	// Deprecated: compatibility alias
	GeoIPMode_GEO_IP_MODE_UNSPECIFIED GeoIPMode_Enum = 0
	GeoIPMode_BLACKLIST               GeoIPMode_Enum = 1
	// Deprecated: compatibility alias
	GeoIPMode_GEO_IP_MODE_BLACKLIST GeoIPMode_Enum = 1
	GeoIPMode_WHITELIST             GeoIPMode_Enum = 2
	// Deprecated: compatibility alias
	GeoIPMode_GEO_IP_MODE_WHITELIST GeoIPMode_Enum = 2
)

// Enum value maps for GeoIPMode_Enum.
var (
	GeoIPMode_Enum_name = map[int32]string{
		0: "UNSPECIFIED",
		// Duplicate value: 0: "GEO_IP_MODE_UNSPECIFIED",
		1: "BLACKLIST",
		// Duplicate value: 1: "GEO_IP_MODE_BLACKLIST",
		2: "WHITELIST",
		// Duplicate value: 2: "GEO_IP_MODE_WHITELIST",
	}
	GeoIPMode_Enum_value = map[string]int32{
		"UNSPECIFIED":             0,
		"GEO_IP_MODE_UNSPECIFIED": 0,
		"BLACKLIST":               1,
		"GEO_IP_MODE_BLACKLIST":   1,
		"WHITELIST":               2,
		"GEO_IP_MODE_WHITELIST":   2,
	}
)

func (x GeoIPMode_Enum) Enum() *GeoIPMode_Enum {
	p := new(GeoIPMode_Enum)
	*p = x
	return p
}

func (x GeoIPMode_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GeoIPMode_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[3].Descriptor()
}

func (GeoIPMode_Enum) Type() protoreflect.EnumType {
	return &file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[3]
}

func (x GeoIPMode_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GeoIPMode_Enum.Descriptor instead.
func (GeoIPMode_Enum) EnumDescriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{14, 0}
}

type BackendState_Enum int32

const (
	// TODO: UNSPECIFIED
	BackendState_OK BackendState_Enum = 0
	// Deprecated: compatibility alias
	BackendState_BACKEND_STATE_OK BackendState_Enum = 0
	BackendState_HTTP_ERROR_5XX   BackendState_Enum = 1
	// Deprecated: compatibility alias
	BackendState_BACKEND_STATE_HTTP_ERROR_5XX BackendState_Enum = 1
	BackendState_TIMEOUT                      BackendState_Enum = 2
	// Deprecated: compatibility alias
	BackendState_BACKEND_STATE_TIMEOUT BackendState_Enum = 2
)

// Enum value maps for BackendState_Enum.
var (
	BackendState_Enum_name = map[int32]string{
		0: "OK",
		// Duplicate value: 0: "BACKEND_STATE_OK",
		1: "HTTP_ERROR_5XX",
		// Duplicate value: 1: "BACKEND_STATE_HTTP_ERROR_5XX",
		2: "TIMEOUT",
		// Duplicate value: 2: "BACKEND_STATE_TIMEOUT",
	}
	BackendState_Enum_value = map[string]int32{
		"OK":                           0,
		"BACKEND_STATE_OK":             0,
		"HTTP_ERROR_5XX":               1,
		"BACKEND_STATE_HTTP_ERROR_5XX": 1,
		"TIMEOUT":                      2,
		"BACKEND_STATE_TIMEOUT":        2,
	}
)

func (x BackendState_Enum) Enum() *BackendState_Enum {
	p := new(BackendState_Enum)
	*p = x
	return p
}

func (x BackendState_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackendState_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[4].Descriptor()
}

func (BackendState_Enum) Type() protoreflect.EnumType {
	return &file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[4]
}

func (x BackendState_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackendState_Enum.Descriptor instead.
func (BackendState_Enum) EnumDescriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{18, 0}
}

type DeploymentType_Enum int32

const (
	DeploymentType_UNSPECIFIED DeploymentType_Enum = 0
	// Deprecated: compatibility alias
	DeploymentType_DEPLOYMENT_TYPE_UNSPECIFIED DeploymentType_Enum = 0
	DeploymentType_SAAS                        DeploymentType_Enum = 1
	// Deprecated: compatibility alias
	DeploymentType_DEPLOYMENT_TYPE_SAAS DeploymentType_Enum = 1
	DeploymentType_SELF_HOSTED          DeploymentType_Enum = 2
	// Deprecated: compatibility alias
	DeploymentType_DEPLOYMENT_TYPE_SELF_HOSTED DeploymentType_Enum = 2
)

// Enum value maps for DeploymentType_Enum.
var (
	DeploymentType_Enum_name = map[int32]string{
		0: "UNSPECIFIED",
		// Duplicate value: 0: "DEPLOYMENT_TYPE_UNSPECIFIED",
		1: "SAAS",
		// Duplicate value: 1: "DEPLOYMENT_TYPE_SAAS",
		2: "SELF_HOSTED",
		// Duplicate value: 2: "DEPLOYMENT_TYPE_SELF_HOSTED",
	}
	DeploymentType_Enum_value = map[string]int32{
		"UNSPECIFIED":                 0,
		"DEPLOYMENT_TYPE_UNSPECIFIED": 0,
		"SAAS":                        1,
		"DEPLOYMENT_TYPE_SAAS":        1,
		"SELF_HOSTED":                 2,
		"DEPLOYMENT_TYPE_SELF_HOSTED": 2,
	}
)

func (x DeploymentType_Enum) Enum() *DeploymentType_Enum {
	p := new(DeploymentType_Enum)
	*p = x
	return p
}

func (x DeploymentType_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentType_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[5].Descriptor()
}

func (DeploymentType_Enum) Type() protoreflect.EnumType {
	return &file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[5]
}

func (x DeploymentType_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentType_Enum.Descriptor instead.
func (DeploymentType_Enum) EnumDescriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{19, 0}
}

type BackendCertificateCheck_Enum int32

const (
	BackendCertificateCheck_UNSPECIFIED BackendCertificateCheck_Enum = 0
	// Deprecated: compatibility alias
	BackendCertificateCheck_BACKEND_CERTIFICATE_CHECK_UNSPECIFIED BackendCertificateCheck_Enum = 0
	BackendCertificateCheck_DISABLED                              BackendCertificateCheck_Enum = 1
	// Deprecated: compatibility alias
	BackendCertificateCheck_BACKEND_CERTIFICATE_CHECK_DISABLED BackendCertificateCheck_Enum = 1
	BackendCertificateCheck_FULL                               BackendCertificateCheck_Enum = 2 // check backend certificate using default system’s CAs
	// Deprecated: compatibility alias
	BackendCertificateCheck_BACKEND_CERTIFICATE_CHECK_FULL BackendCertificateCheck_Enum = 2
)

// Enum value maps for BackendCertificateCheck_Enum.
var (
	BackendCertificateCheck_Enum_name = map[int32]string{
		0: "UNSPECIFIED",
		// Duplicate value: 0: "BACKEND_CERTIFICATE_CHECK_UNSPECIFIED",
		1: "DISABLED",
		// Duplicate value: 1: "BACKEND_CERTIFICATE_CHECK_DISABLED",
		2: "FULL",
		// Duplicate value: 2: "BACKEND_CERTIFICATE_CHECK_FULL",
	}
	BackendCertificateCheck_Enum_value = map[string]int32{
		"UNSPECIFIED":                           0,
		"BACKEND_CERTIFICATE_CHECK_UNSPECIFIED": 0,
		"DISABLED":                              1,
		"BACKEND_CERTIFICATE_CHECK_DISABLED":    1,
		"FULL":                                  2,
		"BACKEND_CERTIFICATE_CHECK_FULL":        2,
	}
)

func (x BackendCertificateCheck_Enum) Enum() *BackendCertificateCheck_Enum {
	p := new(BackendCertificateCheck_Enum)
	*p = x
	return p
}

func (x BackendCertificateCheck_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackendCertificateCheck_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[6].Descriptor()
}

func (BackendCertificateCheck_Enum) Type() protoreflect.EnumType {
	return &file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[6]
}

func (x BackendCertificateCheck_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackendCertificateCheck_Enum.Descriptor instead.
func (BackendCertificateCheck_Enum) EnumDescriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{20, 0}
}

type DnsState_Enum int32

const (
	// TODO: UNSPECIFIED
	DnsState_UNDEFINED DnsState_Enum = 0
	// Deprecated: compatibility alias
	DnsState_DNS_STATE_UNDEFINED DnsState_Enum = 0
	DnsState_REDIRECTED          DnsState_Enum = 1
	// Deprecated: compatibility alias
	DnsState_DNS_STATE_REDIRECTED DnsState_Enum = 1
	DnsState_NOT_REDIRECTED       DnsState_Enum = 2
	// Deprecated: compatibility alias
	DnsState_DNS_STATE_NOT_REDIRECTED DnsState_Enum = 2
)

// Enum value maps for DnsState_Enum.
var (
	DnsState_Enum_name = map[int32]string{
		0: "UNDEFINED",
		// Duplicate value: 0: "DNS_STATE_UNDEFINED",
		1: "REDIRECTED",
		// Duplicate value: 1: "DNS_STATE_REDIRECTED",
		2: "NOT_REDIRECTED",
		// Duplicate value: 2: "DNS_STATE_NOT_REDIRECTED",
	}
	DnsState_Enum_value = map[string]int32{
		"UNDEFINED":                0,
		"DNS_STATE_UNDEFINED":      0,
		"REDIRECTED":               1,
		"DNS_STATE_REDIRECTED":     1,
		"NOT_REDIRECTED":           2,
		"DNS_STATE_NOT_REDIRECTED": 2,
	}
)

func (x DnsState_Enum) Enum() *DnsState_Enum {
	p := new(DnsState_Enum)
	*p = x
	return p
}

func (x DnsState_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DnsState_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[7].Descriptor()
}

func (DnsState_Enum) Type() protoreflect.EnumType {
	return &file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[7]
}

func (x DnsState_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DnsState_Enum.Descriptor instead.
func (DnsState_Enum) EnumDescriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{21, 0}
}

type RunningState_Enum int32

const (
	// TODO: UNSPECIFIED
	RunningState_UNKNOWN RunningState_Enum = 0
	// Deprecated: compatibility alias
	RunningState_RUNNING_STATE_UNKNOWN RunningState_Enum = 0
	RunningState_ALIVE                 RunningState_Enum = 1
	// Deprecated: compatibility alias
	RunningState_RUNNING_STATE_ALIVE RunningState_Enum = 1
	RunningState_DISABLED            RunningState_Enum = 2
	// Deprecated: compatibility alias
	RunningState_RUNNING_STATE_DISABLED RunningState_Enum = 2
)

// Enum value maps for RunningState_Enum.
var (
	RunningState_Enum_name = map[int32]string{
		0: "UNKNOWN",
		// Duplicate value: 0: "RUNNING_STATE_UNKNOWN",
		1: "ALIVE",
		// Duplicate value: 1: "RUNNING_STATE_ALIVE",
		2: "DISABLED",
		// Duplicate value: 2: "RUNNING_STATE_DISABLED",
	}
	RunningState_Enum_value = map[string]int32{
		"UNKNOWN":                0,
		"RUNNING_STATE_UNKNOWN":  0,
		"ALIVE":                  1,
		"RUNNING_STATE_ALIVE":    1,
		"DISABLED":               2,
		"RUNNING_STATE_DISABLED": 2,
	}
)

func (x RunningState_Enum) Enum() *RunningState_Enum {
	p := new(RunningState_Enum)
	*p = x
	return p
}

func (x RunningState_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunningState_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[8].Descriptor()
}

func (RunningState_Enum) Type() protoreflect.EnumType {
	return &file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[8]
}

func (x RunningState_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunningState_Enum.Descriptor instead.
func (RunningState_Enum) EnumDescriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{23, 0}
}

type TLSMode_Enum int32

const (
	// TODO: UNSPECIFIED
	TLSMode_NONE TLSMode_Enum = 0
	// Deprecated: compatibility alias
	TLSMode_TLS_MODE_NONE TLSMode_Enum = 0
	TLSMode_CUSTOM        TLSMode_Enum = 1
	// Deprecated: compatibility alias
	TLSMode_TLS_MODE_CUSTOM TLSMode_Enum = 1
	TLSMode_AUTO            TLSMode_Enum = 2
	// Deprecated: compatibility alias
	TLSMode_TLS_MODE_AUTO TLSMode_Enum = 2
)

// Enum value maps for TLSMode_Enum.
var (
	TLSMode_Enum_name = map[int32]string{
		0: "NONE",
		// Duplicate value: 0: "TLS_MODE_NONE",
		1: "CUSTOM",
		// Duplicate value: 1: "TLS_MODE_CUSTOM",
		2: "AUTO",
		// Duplicate value: 2: "TLS_MODE_AUTO",
	}
	TLSMode_Enum_value = map[string]int32{
		"NONE":            0,
		"TLS_MODE_NONE":   0,
		"CUSTOM":          1,
		"TLS_MODE_CUSTOM": 1,
		"AUTO":            2,
		"TLS_MODE_AUTO":   2,
	}
)

func (x TLSMode_Enum) Enum() *TLSMode_Enum {
	p := new(TLSMode_Enum)
	*p = x
	return p
}

func (x TLSMode_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TLSMode_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[9].Descriptor()
}

func (TLSMode_Enum) Type() protoreflect.EnumType {
	return &file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes[9]
}

func (x TLSMode_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TLSMode_Enum.Descriptor instead.
func (TLSMode_Enum) EnumDescriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{24, 0}
}

type SecurityMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SecurityMode) Reset() {
	*x = SecurityMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityMode) ProtoMessage() {}

func (x *SecurityMode) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityMode.ProtoReflect.Descriptor instead.
func (*SecurityMode) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{0}
}

type ExceptionProfileSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules []*ExceptionProfileSpec_Rule `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *ExceptionProfileSpec) Reset() {
	*x = ExceptionProfileSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExceptionProfileSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExceptionProfileSpec) ProtoMessage() {}

func (x *ExceptionProfileSpec) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExceptionProfileSpec.ProtoReflect.Descriptor instead.
func (*ExceptionProfileSpec) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{1}
}

func (x *ExceptionProfileSpec) GetRules() []*ExceptionProfileSpec_Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type ExceptionProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string                `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string                `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ObjectMeta    `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *ExceptionProfileSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *ExceptionProfile) Reset() {
	*x = ExceptionProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExceptionProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExceptionProfile) ProtoMessage() {}

func (x *ExceptionProfile) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExceptionProfile.ProtoReflect.Descriptor instead.
func (*ExceptionProfile) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{2}
}

func (x *ExceptionProfile) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *ExceptionProfile) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ExceptionProfile) GetMetadata() *v1beta.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ExceptionProfile) GetSpec() *ExceptionProfileSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ExceptionProfileList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string              `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string              `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ListMeta    `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Items      []*ExceptionProfile `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ExceptionProfileList) Reset() {
	*x = ExceptionProfileList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExceptionProfileList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExceptionProfileList) ProtoMessage() {}

func (x *ExceptionProfileList) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExceptionProfileList.ProtoReflect.Descriptor instead.
func (*ExceptionProfileList) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{3}
}

func (x *ExceptionProfileList) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *ExceptionProfileList) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ExceptionProfileList) GetMetadata() *v1beta.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ExceptionProfileList) GetItems() []*ExceptionProfile {
	if x != nil {
		return x.Items
	}
	return nil
}

type APIModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityMode SecurityMode_Enum `protobuf:"varint,1,opt,name=security_mode,json=securityMode,proto3,enum=assets.ubika.io.v1beta.SecurityMode_Enum" json:"security_mode,omitempty"`
	Openapi      string            `protobuf:"bytes,2,opt,name=openapi,proto3" json:"openapi,omitempty"`
}

func (x *APIModule) Reset() {
	*x = APIModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIModule) ProtoMessage() {}

func (x *APIModule) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIModule.ProtoReflect.Descriptor instead.
func (*APIModule) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{4}
}

func (x *APIModule) GetSecurityMode() SecurityMode_Enum {
	if x != nil {
		return x.SecurityMode
	}
	return SecurityMode_BLOCK
}

func (x *APIModule) GetOpenapi() string {
	if x != nil {
		return x.Openapi
	}
	return ""
}

type ApplicationModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityMode SecurityMode_Enum `protobuf:"varint,1,opt,name=security_mode,json=securityMode,proto3,enum=assets.ubika.io.v1beta.SecurityMode_Enum" json:"security_mode,omitempty"`
	// Deprecated: see AssetSpec.exception_profile
	ExceptionProfile string `protobuf:"bytes,2,opt,name=exception_profile,json=exceptionProfile,proto3" json:"exception_profile,omitempty"`
}

func (x *ApplicationModule) Reset() {
	*x = ApplicationModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationModule) ProtoMessage() {}

func (x *ApplicationModule) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationModule.ProtoReflect.Descriptor instead.
func (*ApplicationModule) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{5}
}

func (x *ApplicationModule) GetSecurityMode() SecurityMode_Enum {
	if x != nil {
		return x.SecurityMode
	}
	return SecurityMode_BLOCK
}

func (x *ApplicationModule) GetExceptionProfile() string {
	if x != nil {
		return x.ExceptionProfile
	}
	return ""
}

type Workflow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string             `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string             `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ObjectMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *WorkflowSpec      `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *Workflow) Reset() {
	*x = Workflow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow) ProtoMessage() {}

func (x *Workflow) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow.ProtoReflect.Descriptor instead.
func (*Workflow) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{6}
}

func (x *Workflow) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *Workflow) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Workflow) GetMetadata() *v1beta.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Workflow) GetSpec() *WorkflowSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type WorkflowList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string           `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string           `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ListMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Items      []*Workflow      `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *WorkflowList) Reset() {
	*x = WorkflowList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowList) ProtoMessage() {}

func (x *WorkflowList) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowList.ProtoReflect.Descriptor instead.
func (*WorkflowList) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{7}
}

func (x *WorkflowList) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *WorkflowList) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *WorkflowList) GetMetadata() *v1beta.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *WorkflowList) GetItems() []*Workflow {
	if x != nil {
		return x.Items
	}
	return nil
}

type WorkflowSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source     string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Entrypoint string `protobuf:"bytes,2,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
}

func (x *WorkflowSpec) Reset() {
	*x = WorkflowSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowSpec) ProtoMessage() {}

func (x *WorkflowSpec) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowSpec.ProtoReflect.Descriptor instead.
func (*WorkflowSpec) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{8}
}

func (x *WorkflowSpec) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *WorkflowSpec) GetEntrypoint() string {
	if x != nil {
		return x.Entrypoint
	}
	return ""
}

type CustomWkfModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflow       string            `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	WorkflowParams map[string]string `protobuf:"bytes,2,rep,name=workflow_params,json=workflowParams,proto3" json:"workflow_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CustomWkfModule) Reset() {
	*x = CustomWkfModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomWkfModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomWkfModule) ProtoMessage() {}

func (x *CustomWkfModule) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomWkfModule.ProtoReflect.Descriptor instead.
func (*CustomWkfModule) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{9}
}

func (x *CustomWkfModule) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

func (x *CustomWkfModule) GetWorkflowParams() map[string]string {
	if x != nil {
		return x.WorkflowParams
	}
	return nil
}

type WebSocketSecurityMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WebSocketSecurityMode) Reset() {
	*x = WebSocketSecurityMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebSocketSecurityMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketSecurityMode) ProtoMessage() {}

func (x *WebSocketSecurityMode) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketSecurityMode.ProtoReflect.Descriptor instead.
func (*WebSocketSecurityMode) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{10}
}

type WebSocketModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityMode WebSocketSecurityMode_Enum `protobuf:"varint,1,opt,name=security_mode,json=securityMode,proto3,enum=assets.ubika.io.v1beta.WebSocketSecurityMode_Enum" json:"security_mode,omitempty"`
}

func (x *WebSocketModule) Reset() {
	*x = WebSocketModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebSocketModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketModule) ProtoMessage() {}

func (x *WebSocketModule) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketModule.ProtoReflect.Descriptor instead.
func (*WebSocketModule) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{11}
}

func (x *WebSocketModule) GetSecurityMode() WebSocketSecurityMode_Enum {
	if x != nil {
		return x.SecurityMode
	}
	return WebSocketSecurityMode_UNSPECIFIED
}

type IPReputationThreat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IPReputationThreat) Reset() {
	*x = IPReputationThreat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPReputationThreat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPReputationThreat) ProtoMessage() {}

func (x *IPReputationThreat) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPReputationThreat.ProtoReflect.Descriptor instead.
func (*IPReputationThreat) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{12}
}

type IPReputationModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityMode SecurityMode_Enum         `protobuf:"varint,1,opt,name=security_mode,json=securityMode,proto3,enum=assets.ubika.io.v1beta.SecurityMode_Enum" json:"security_mode,omitempty"`
	Threats      []IPReputationThreat_Enum `protobuf:"varint,2,rep,packed,name=threats,proto3,enum=assets.ubika.io.v1beta.IPReputationThreat_Enum" json:"threats,omitempty"`
}

func (x *IPReputationModule) Reset() {
	*x = IPReputationModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPReputationModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPReputationModule) ProtoMessage() {}

func (x *IPReputationModule) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPReputationModule.ProtoReflect.Descriptor instead.
func (*IPReputationModule) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{13}
}

func (x *IPReputationModule) GetSecurityMode() SecurityMode_Enum {
	if x != nil {
		return x.SecurityMode
	}
	return SecurityMode_BLOCK
}

func (x *IPReputationModule) GetThreats() []IPReputationThreat_Enum {
	if x != nil {
		return x.Threats
	}
	return nil
}

type GeoIPMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GeoIPMode) Reset() {
	*x = GeoIPMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoIPMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoIPMode) ProtoMessage() {}

func (x *GeoIPMode) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoIPMode.ProtoReflect.Descriptor instead.
func (*GeoIPMode) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{14}
}

type GeoIPModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityMode SecurityMode_Enum `protobuf:"varint,1,opt,name=security_mode,json=securityMode,proto3,enum=assets.ubika.io.v1beta.SecurityMode_Enum" json:"security_mode,omitempty"`
	// Code "ZZ" for unknown country
	Countries []string       `protobuf:"bytes,2,rep,name=countries,proto3" json:"countries,omitempty"`
	Mode      GeoIPMode_Enum `protobuf:"varint,3,opt,name=mode,proto3,enum=assets.ubika.io.v1beta.GeoIPMode_Enum" json:"mode,omitempty"`
}

func (x *GeoIPModule) Reset() {
	*x = GeoIPModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoIPModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoIPModule) ProtoMessage() {}

func (x *GeoIPModule) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoIPModule.ProtoReflect.Descriptor instead.
func (*GeoIPModule) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{15}
}

func (x *GeoIPModule) GetSecurityMode() SecurityMode_Enum {
	if x != nil {
		return x.SecurityMode
	}
	return SecurityMode_BLOCK
}

func (x *GeoIPModule) GetCountries() []string {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *GeoIPModule) GetMode() GeoIPMode_Enum {
	if x != nil {
		return x.Mode
	}
	return GeoIPMode_UNSPECIFIED
}

type IPBlacklistModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityMode SecurityMode_Enum `protobuf:"varint,1,opt,name=security_mode,json=securityMode,proto3,enum=assets.ubika.io.v1beta.SecurityMode_Enum" json:"security_mode,omitempty"`
	IpBlacklist  string            `protobuf:"bytes,2,opt,name=ip_blacklist,json=ipBlacklist,proto3" json:"ip_blacklist,omitempty"`
}

func (x *IPBlacklistModule) Reset() {
	*x = IPBlacklistModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPBlacklistModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPBlacklistModule) ProtoMessage() {}

func (x *IPBlacklistModule) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPBlacklistModule.ProtoReflect.Descriptor instead.
func (*IPBlacklistModule) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{16}
}

func (x *IPBlacklistModule) GetSecurityMode() SecurityMode_Enum {
	if x != nil {
		return x.SecurityMode
	}
	return SecurityMode_BLOCK
}

func (x *IPBlacklistModule) GetIpBlacklist() string {
	if x != nil {
		return x.IpBlacklist
	}
	return ""
}

type AssetSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostnames          []string            `protobuf:"bytes,1,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
	BackendUrl         string              `protobuf:"bytes,2,opt,name=backend_url,json=backendUrl,proto3" json:"backend_url,omitempty"`
	TlsMode            TLSMode_Enum        `protobuf:"varint,4,opt,name=tls_mode,json=tlsMode,proto3,enum=assets.ubika.io.v1beta.TLSMode_Enum" json:"tls_mode,omitempty"`
	ApiModule          *APIModule          `protobuf:"bytes,5,opt,name=api_module,json=apiModule,proto3,oneof" json:"api_module,omitempty"`
	ApplicationModule  *ApplicationModule  `protobuf:"bytes,6,opt,name=application_module,json=applicationModule,proto3,oneof" json:"application_module,omitempty"`
	WebSocketModule    *WebSocketModule    `protobuf:"bytes,12,opt,name=web_socket_module,json=webSocketModule,proto3,oneof" json:"web_socket_module,omitempty"`
	IpReputationModule *IPReputationModule `protobuf:"bytes,16,opt,name=ip_reputation_module,json=ipReputationModule,proto3,oneof" json:"ip_reputation_module,omitempty"`
	GeoIpModule        *GeoIPModule        `protobuf:"bytes,17,opt,name=geo_ip_module,json=geoIpModule,proto3,oneof" json:"geo_ip_module,omitempty"`
	CustomWkfModule    *CustomWkfModule    `protobuf:"bytes,18,opt,name=custom_wkf_module,json=customWkfModule,proto3,oneof" json:"custom_wkf_module,omitempty"`
	IpBlacklistModule  *IPBlacklistModule  `protobuf:"bytes,21,opt,name=ip_blacklist_module,json=ipBlacklistModule,proto3,oneof" json:"ip_blacklist_module,omitempty"`
	TlsMaterial        string              `protobuf:"bytes,7,opt,name=tls_material,json=tlsMaterial,proto3" json:"tls_material,omitempty"`
	TlsConfiguration   string              `protobuf:"bytes,8,opt,name=tls_configuration,json=tlsConfiguration,proto3" json:"tls_configuration,omitempty"`
	// blocking_page refers to an error document, used for 403 when security event is triggered
	BlockingPage   string              `protobuf:"bytes,9,opt,name=blocking_page,json=blockingPage,proto3" json:"blocking_page,omitempty"`
	DeploymentType DeploymentType_Enum `protobuf:"varint,10,opt,name=deployment_type,json=deploymentType,proto3,enum=assets.ubika.io.v1beta.DeploymentType_Enum" json:"deployment_type,omitempty"`
	// exception_profile overrides the deprecated ApplicationModule.exception_profile
	ExceptionProfile string `protobuf:"bytes,11,opt,name=exception_profile,json=exceptionProfile,proto3" json:"exception_profile,omitempty"`
	// unavailable_page refers to an error document, used for 502, 503 and 504 when backend does not answer correctly
	UnavailablePage string `protobuf:"bytes,13,opt,name=unavailable_page,json=unavailablePage,proto3" json:"unavailable_page,omitempty"`
	// maintenance_page refers to an error document, used to present a 503 instead of forwarding to backend
	MaintenancePage         string                       `protobuf:"bytes,14,opt,name=maintenance_page,json=maintenancePage,proto3" json:"maintenance_page,omitempty"`
	MaintenanceEnabled      bool                         `protobuf:"varint,15,opt,name=maintenance_enabled,json=maintenanceEnabled,proto3" json:"maintenance_enabled,omitempty"`
	TrustedIpAddressHeader  string                       `protobuf:"bytes,19,opt,name=trusted_ip_address_header,json=trustedIpAddressHeader,proto3" json:"trusted_ip_address_header,omitempty"`
	BackendCertificateCheck BackendCertificateCheck_Enum `protobuf:"varint,20,opt,name=backend_certificate_check,json=backendCertificateCheck,proto3,enum=assets.ubika.io.v1beta.BackendCertificateCheck_Enum" json:"backend_certificate_check,omitempty"`
}

func (x *AssetSpec) Reset() {
	*x = AssetSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetSpec) ProtoMessage() {}

func (x *AssetSpec) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetSpec.ProtoReflect.Descriptor instead.
func (*AssetSpec) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{17}
}

func (x *AssetSpec) GetHostnames() []string {
	if x != nil {
		return x.Hostnames
	}
	return nil
}

func (x *AssetSpec) GetBackendUrl() string {
	if x != nil {
		return x.BackendUrl
	}
	return ""
}

func (x *AssetSpec) GetTlsMode() TLSMode_Enum {
	if x != nil {
		return x.TlsMode
	}
	return TLSMode_NONE
}

func (x *AssetSpec) GetApiModule() *APIModule {
	if x != nil {
		return x.ApiModule
	}
	return nil
}

func (x *AssetSpec) GetApplicationModule() *ApplicationModule {
	if x != nil {
		return x.ApplicationModule
	}
	return nil
}

func (x *AssetSpec) GetWebSocketModule() *WebSocketModule {
	if x != nil {
		return x.WebSocketModule
	}
	return nil
}

func (x *AssetSpec) GetIpReputationModule() *IPReputationModule {
	if x != nil {
		return x.IpReputationModule
	}
	return nil
}

func (x *AssetSpec) GetGeoIpModule() *GeoIPModule {
	if x != nil {
		return x.GeoIpModule
	}
	return nil
}

func (x *AssetSpec) GetCustomWkfModule() *CustomWkfModule {
	if x != nil {
		return x.CustomWkfModule
	}
	return nil
}

func (x *AssetSpec) GetIpBlacklistModule() *IPBlacklistModule {
	if x != nil {
		return x.IpBlacklistModule
	}
	return nil
}

func (x *AssetSpec) GetTlsMaterial() string {
	if x != nil {
		return x.TlsMaterial
	}
	return ""
}

func (x *AssetSpec) GetTlsConfiguration() string {
	if x != nil {
		return x.TlsConfiguration
	}
	return ""
}

func (x *AssetSpec) GetBlockingPage() string {
	if x != nil {
		return x.BlockingPage
	}
	return ""
}

func (x *AssetSpec) GetDeploymentType() DeploymentType_Enum {
	if x != nil {
		return x.DeploymentType
	}
	return DeploymentType_UNSPECIFIED
}

func (x *AssetSpec) GetExceptionProfile() string {
	if x != nil {
		return x.ExceptionProfile
	}
	return ""
}

func (x *AssetSpec) GetUnavailablePage() string {
	if x != nil {
		return x.UnavailablePage
	}
	return ""
}

func (x *AssetSpec) GetMaintenancePage() string {
	if x != nil {
		return x.MaintenancePage
	}
	return ""
}

func (x *AssetSpec) GetMaintenanceEnabled() bool {
	if x != nil {
		return x.MaintenanceEnabled
	}
	return false
}

func (x *AssetSpec) GetTrustedIpAddressHeader() string {
	if x != nil {
		return x.TrustedIpAddressHeader
	}
	return ""
}

func (x *AssetSpec) GetBackendCertificateCheck() BackendCertificateCheck_Enum {
	if x != nil {
		return x.BackendCertificateCheck
	}
	return BackendCertificateCheck_UNSPECIFIED
}

type BackendState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BackendState) Reset() {
	*x = BackendState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackendState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackendState) ProtoMessage() {}

func (x *BackendState) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackendState.ProtoReflect.Descriptor instead.
func (*BackendState) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{18}
}

type DeploymentType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeploymentType) Reset() {
	*x = DeploymentType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentType) ProtoMessage() {}

func (x *DeploymentType) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentType.ProtoReflect.Descriptor instead.
func (*DeploymentType) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{19}
}

type BackendCertificateCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BackendCertificateCheck) Reset() {
	*x = BackendCertificateCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackendCertificateCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackendCertificateCheck) ProtoMessage() {}

func (x *BackendCertificateCheck) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackendCertificateCheck.ProtoReflect.Descriptor instead.
func (*BackendCertificateCheck) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{20}
}

type DnsState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DnsState) Reset() {
	*x = DnsState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DnsState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DnsState) ProtoMessage() {}

func (x *DnsState) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DnsState.ProtoReflect.Descriptor instead.
func (*DnsState) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{21}
}

type AssetState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Backend             BackendState_Enum `protobuf:"varint,1,opt,name=backend,proto3,enum=assets.ubika.io.v1beta.BackendState_Enum" json:"backend,omitempty"`
	Dns                 DnsState_Enum     `protobuf:"varint,2,opt,name=dns,proto3,enum=assets.ubika.io.v1beta.DnsState_Enum" json:"dns,omitempty"`
	Runningstate        RunningState_Enum `protobuf:"varint,3,opt,name=runningstate,proto3,enum=assets.ubika.io.v1beta.RunningState_Enum" json:"runningstate,omitempty"`
	RedirectedHostnames []string          `protobuf:"bytes,4,rep,name=redirected_hostnames,json=redirectedHostnames,proto3" json:"redirected_hostnames,omitempty"`
}

func (x *AssetState) Reset() {
	*x = AssetState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetState) ProtoMessage() {}

func (x *AssetState) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetState.ProtoReflect.Descriptor instead.
func (*AssetState) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{22}
}

func (x *AssetState) GetBackend() BackendState_Enum {
	if x != nil {
		return x.Backend
	}
	return BackendState_OK
}

func (x *AssetState) GetDns() DnsState_Enum {
	if x != nil {
		return x.Dns
	}
	return DnsState_UNDEFINED
}

func (x *AssetState) GetRunningstate() RunningState_Enum {
	if x != nil {
		return x.Runningstate
	}
	return RunningState_UNKNOWN
}

func (x *AssetState) GetRedirectedHostnames() []string {
	if x != nil {
		return x.RedirectedHostnames
	}
	return nil
}

type RunningState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunningState) Reset() {
	*x = RunningState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunningState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningState) ProtoMessage() {}

func (x *RunningState) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningState.ProtoReflect.Descriptor instead.
func (*RunningState) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{23}
}

type TLSMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TLSMode) Reset() {
	*x = TLSMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSMode) ProtoMessage() {}

func (x *TLSMode) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSMode.ProtoReflect.Descriptor instead.
func (*TLSMode) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{24}
}

type AssetTlsState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginsOn  string       `protobuf:"bytes,1,opt,name=begins_on,json=beginsOn,proto3" json:"begins_on,omitempty"`
	ExpiresOn string       `protobuf:"bytes,2,opt,name=expires_on,json=expiresOn,proto3" json:"expires_on,omitempty"`
	Mode      TLSMode_Enum `protobuf:"varint,3,opt,name=mode,proto3,enum=assets.ubika.io.v1beta.TLSMode_Enum" json:"mode,omitempty"`
}

func (x *AssetTlsState) Reset() {
	*x = AssetTlsState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetTlsState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetTlsState) ProtoMessage() {}

func (x *AssetTlsState) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetTlsState.ProtoReflect.Descriptor instead.
func (*AssetTlsState) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{25}
}

func (x *AssetTlsState) GetBeginsOn() string {
	if x != nil {
		return x.BeginsOn
	}
	return ""
}

func (x *AssetTlsState) GetExpiresOn() string {
	if x != nil {
		return x.ExpiresOn
	}
	return ""
}

func (x *AssetTlsState) GetMode() TLSMode_Enum {
	if x != nil {
		return x.Mode
	}
	return TLSMode_NONE
}

type AssetStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceAddress string         `protobuf:"bytes,1,opt,name=service_address,json=serviceAddress,proto3" json:"service_address,omitempty"`
	State          *AssetState    `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Tls            *AssetTlsState `protobuf:"bytes,3,opt,name=tls,proto3" json:"tls,omitempty"`
}

func (x *AssetStatus) Reset() {
	*x = AssetStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetStatus) ProtoMessage() {}

func (x *AssetStatus) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetStatus.ProtoReflect.Descriptor instead.
func (*AssetStatus) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{26}
}

func (x *AssetStatus) GetServiceAddress() string {
	if x != nil {
		return x.ServiceAddress
	}
	return ""
}

func (x *AssetStatus) GetState() *AssetState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *AssetStatus) GetTls() *AssetTlsState {
	if x != nil {
		return x.Tls
	}
	return nil
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string             `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string             `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ObjectMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *AssetSpec         `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	Status     *AssetStatus       `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{27}
}

func (x *Asset) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *Asset) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Asset) GetMetadata() *v1beta.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Asset) GetSpec() *AssetSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Asset) GetStatus() *AssetStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type AssetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string           `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string           `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ListMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Items      []*Asset         `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AssetList) Reset() {
	*x = AssetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetList) ProtoMessage() {}

func (x *AssetList) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetList.ProtoReflect.Descriptor instead.
func (*AssetList) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{28}
}

func (x *AssetList) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *AssetList) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *AssetList) GetMetadata() *v1beta.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AssetList) GetItems() []*Asset {
	if x != nil {
		return x.Items
	}
	return nil
}

type OpenAPISpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// source must be less than 2MiB
	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *OpenAPISpec) Reset() {
	*x = OpenAPISpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAPISpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAPISpec) ProtoMessage() {}

func (x *OpenAPISpec) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAPISpec.ProtoReflect.Descriptor instead.
func (*OpenAPISpec) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{29}
}

func (x *OpenAPISpec) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type OpenAPI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string             `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string             `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ObjectMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *OpenAPISpec       `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *OpenAPI) Reset() {
	*x = OpenAPI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAPI) ProtoMessage() {}

func (x *OpenAPI) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAPI.ProtoReflect.Descriptor instead.
func (*OpenAPI) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{30}
}

func (x *OpenAPI) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *OpenAPI) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *OpenAPI) GetMetadata() *v1beta.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *OpenAPI) GetSpec() *OpenAPISpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type OpenAPIList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string           `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string           `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ListMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Items      []*OpenAPI       `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *OpenAPIList) Reset() {
	*x = OpenAPIList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAPIList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAPIList) ProtoMessage() {}

func (x *OpenAPIList) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAPIList.ProtoReflect.Descriptor instead.
func (*OpenAPIList) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{31}
}

func (x *OpenAPIList) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *OpenAPIList) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *OpenAPIList) GetMetadata() *v1beta.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *OpenAPIList) GetItems() []*OpenAPI {
	if x != nil {
		return x.Items
	}
	return nil
}

type ErrorDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string             `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string             `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ObjectMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *ErrorDocumentSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *ErrorDocument) Reset() {
	*x = ErrorDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorDocument) ProtoMessage() {}

func (x *ErrorDocument) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorDocument.ProtoReflect.Descriptor instead.
func (*ErrorDocument) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{32}
}

func (x *ErrorDocument) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *ErrorDocument) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ErrorDocument) GetMetadata() *v1beta.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ErrorDocument) GetSpec() *ErrorDocumentSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ErrorDocumentSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        string `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
}

func (x *ErrorDocumentSpec) Reset() {
	*x = ErrorDocumentSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorDocumentSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorDocumentSpec) ProtoMessage() {}

func (x *ErrorDocumentSpec) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorDocumentSpec.ProtoReflect.Descriptor instead.
func (*ErrorDocumentSpec) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{33}
}

func (x *ErrorDocumentSpec) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *ErrorDocumentSpec) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type ErrorDocumentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string           `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string           `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ListMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Items      []*ErrorDocument `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ErrorDocumentList) Reset() {
	*x = ErrorDocumentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorDocumentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorDocumentList) ProtoMessage() {}

func (x *ErrorDocumentList) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorDocumentList.ProtoReflect.Descriptor instead.
func (*ErrorDocumentList) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{34}
}

func (x *ErrorDocumentList) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *ErrorDocumentList) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ErrorDocumentList) GetMetadata() *v1beta.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ErrorDocumentList) GetItems() []*ErrorDocument {
	if x != nil {
		return x.Items
	}
	return nil
}

type CSRStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset     string       `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Hostnames []string     `protobuf:"bytes,2,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
	Mode      TLSMode_Enum `protobuf:"varint,3,opt,name=mode,proto3,enum=assets.ubika.io.v1beta.TLSMode_Enum" json:"mode,omitempty"`
}

func (x *CSRStatus) Reset() {
	*x = CSRStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSRStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSRStatus) ProtoMessage() {}

func (x *CSRStatus) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSRStatus.ProtoReflect.Descriptor instead.
func (*CSRStatus) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{35}
}

func (x *CSRStatus) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *CSRStatus) GetHostnames() []string {
	if x != nil {
		return x.Hostnames
	}
	return nil
}

func (x *CSRStatus) GetMode() TLSMode_Enum {
	if x != nil {
		return x.Mode
	}
	return TLSMode_NONE
}

type CSRCreateSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
}

func (x *CSRCreateSpec) Reset() {
	*x = CSRCreateSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSRCreateSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSRCreateSpec) ProtoMessage() {}

func (x *CSRCreateSpec) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSRCreateSpec.ProtoReflect.Descriptor instead.
func (*CSRCreateSpec) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{36}
}

func (x *CSRCreateSpec) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

type CSRCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string             `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string             `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ObjectMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *CSRCreateSpec     `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CSRCreate) Reset() {
	*x = CSRCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSRCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSRCreate) ProtoMessage() {}

func (x *CSRCreate) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSRCreate.ProtoReflect.Descriptor instead.
func (*CSRCreate) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{37}
}

func (x *CSRCreate) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *CSRCreate) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *CSRCreate) GetMetadata() *v1beta.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CSRCreate) GetSpec() *CSRCreateSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type CSRSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Csr string `protobuf:"bytes,1,opt,name=csr,proto3" json:"csr,omitempty"`
}

func (x *CSRSpec) Reset() {
	*x = CSRSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSRSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSRSpec) ProtoMessage() {}

func (x *CSRSpec) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSRSpec.ProtoReflect.Descriptor instead.
func (*CSRSpec) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{38}
}

func (x *CSRSpec) GetCsr() string {
	if x != nil {
		return x.Csr
	}
	return ""
}

type CSR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string             `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string             `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ObjectMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Status     *CSRStatus         `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Spec       *CSRSpec           `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CSR) Reset() {
	*x = CSR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSR) ProtoMessage() {}

func (x *CSR) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSR.ProtoReflect.Descriptor instead.
func (*CSR) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{39}
}

func (x *CSR) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *CSR) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *CSR) GetMetadata() *v1beta.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CSR) GetStatus() *CSRStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CSR) GetSpec() *CSRSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type CSRList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string           `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string           `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ListMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Items      []*CSR           `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CSRList) Reset() {
	*x = CSRList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSRList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSRList) ProtoMessage() {}

func (x *CSRList) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSRList.ProtoReflect.Descriptor instead.
func (*CSRList) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{40}
}

func (x *CSRList) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *CSRList) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *CSRList) GetMetadata() *v1beta.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CSRList) GetItems() []*CSR {
	if x != nil {
		return x.Items
	}
	return nil
}

type CSRFullSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Csr string `protobuf:"bytes,1,opt,name=csr,proto3" json:"csr,omitempty"`
	Key []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *CSRFullSpec) Reset() {
	*x = CSRFullSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSRFullSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSRFullSpec) ProtoMessage() {}

func (x *CSRFullSpec) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSRFullSpec.ProtoReflect.Descriptor instead.
func (*CSRFullSpec) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{41}
}

func (x *CSRFullSpec) GetCsr() string {
	if x != nil {
		return x.Csr
	}
	return ""
}

func (x *CSRFullSpec) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type CSRFull struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string             `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string             `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ObjectMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Status     *CSRStatus         `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Spec       *CSRFullSpec       `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CSRFull) Reset() {
	*x = CSRFull{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSRFull) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSRFull) ProtoMessage() {}

func (x *CSRFull) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSRFull.ProtoReflect.Descriptor instead.
func (*CSRFull) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{42}
}

func (x *CSRFull) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *CSRFull) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *CSRFull) GetMetadata() *v1beta.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CSRFull) GetStatus() *CSRStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CSRFull) GetSpec() *CSRFullSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type CSRCertificateSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Csr         string `protobuf:"bytes,1,opt,name=csr,proto3" json:"csr,omitempty"`
	Certificate string `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Chain       string `protobuf:"bytes,3,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (x *CSRCertificateSpec) Reset() {
	*x = CSRCertificateSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSRCertificateSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSRCertificateSpec) ProtoMessage() {}

func (x *CSRCertificateSpec) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSRCertificateSpec.ProtoReflect.Descriptor instead.
func (*CSRCertificateSpec) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{43}
}

func (x *CSRCertificateSpec) GetCsr() string {
	if x != nil {
		return x.Csr
	}
	return ""
}

func (x *CSRCertificateSpec) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *CSRCertificateSpec) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

type CSRCertificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// metadata.name is used as name for TLSMaterial
	ApiVersion string              `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string              `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ObjectMeta  `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *CSRCertificateSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CSRCertificate) Reset() {
	*x = CSRCertificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSRCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSRCertificate) ProtoMessage() {}

func (x *CSRCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSRCertificate.ProtoReflect.Descriptor instead.
func (*CSRCertificate) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{44}
}

func (x *CSRCertificate) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *CSRCertificate) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *CSRCertificate) GetMetadata() *v1beta.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CSRCertificate) GetSpec() *CSRCertificateSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type TLSMaterialSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certificate string `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Chain       string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (x *TLSMaterialSpec) Reset() {
	*x = TLSMaterialSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSMaterialSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSMaterialSpec) ProtoMessage() {}

func (x *TLSMaterialSpec) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSMaterialSpec.ProtoReflect.Descriptor instead.
func (*TLSMaterialSpec) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{45}
}

func (x *TLSMaterialSpec) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *TLSMaterialSpec) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

type TLSMaterial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string             `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string             `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ObjectMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *TLSMaterialSpec   `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	Status     *TLSMaterialStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *TLSMaterial) Reset() {
	*x = TLSMaterial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSMaterial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSMaterial) ProtoMessage() {}

func (x *TLSMaterial) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSMaterial.ProtoReflect.Descriptor instead.
func (*TLSMaterial) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{46}
}

func (x *TLSMaterial) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *TLSMaterial) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *TLSMaterial) GetMetadata() *v1beta.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TLSMaterial) GetSpec() *TLSMaterialSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *TLSMaterial) GetStatus() *TLSMaterialStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type TLSMaterialList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string           `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string           `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ListMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Items      []*TLSMaterial   `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *TLSMaterialList) Reset() {
	*x = TLSMaterialList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSMaterialList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSMaterialList) ProtoMessage() {}

func (x *TLSMaterialList) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSMaterialList.ProtoReflect.Descriptor instead.
func (*TLSMaterialList) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{47}
}

func (x *TLSMaterialList) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *TLSMaterialList) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *TLSMaterialList) GetMetadata() *v1beta.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TLSMaterialList) GetItems() []*TLSMaterial {
	if x != nil {
		return x.Items
	}
	return nil
}

type TLSMaterialStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode      TLSMode_Enum           `protobuf:"varint,1,opt,name=mode,proto3,enum=assets.ubika.io.v1beta.TLSMode_Enum" json:"mode,omitempty"`
	Hostnames []string               `protobuf:"bytes,2,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
	NotBefore *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	NotAfter  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=not_after,json=notAfter,proto3" json:"not_after,omitempty"`
	UsedBy    string                 `protobuf:"bytes,5,opt,name=used_by,json=usedBy,proto3" json:"used_by,omitempty"`
	Issuer_CN string                 `protobuf:"bytes,6,opt,name=issuer_CN,json=issuerCN,proto3" json:"issuer_CN,omitempty"`
	CN        string                 `protobuf:"bytes,7,opt,name=CN,proto3" json:"CN,omitempty"`
}

func (x *TLSMaterialStatus) Reset() {
	*x = TLSMaterialStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSMaterialStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSMaterialStatus) ProtoMessage() {}

func (x *TLSMaterialStatus) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSMaterialStatus.ProtoReflect.Descriptor instead.
func (*TLSMaterialStatus) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{48}
}

func (x *TLSMaterialStatus) GetMode() TLSMode_Enum {
	if x != nil {
		return x.Mode
	}
	return TLSMode_NONE
}

func (x *TLSMaterialStatus) GetHostnames() []string {
	if x != nil {
		return x.Hostnames
	}
	return nil
}

func (x *TLSMaterialStatus) GetNotBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.NotBefore
	}
	return nil
}

func (x *TLSMaterialStatus) GetNotAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.NotAfter
	}
	return nil
}

func (x *TLSMaterialStatus) GetUsedBy() string {
	if x != nil {
		return x.UsedBy
	}
	return ""
}

func (x *TLSMaterialStatus) GetIssuer_CN() string {
	if x != nil {
		return x.Issuer_CN
	}
	return ""
}

func (x *TLSMaterialStatus) GetCN() string {
	if x != nil {
		return x.CN
	}
	return ""
}

type TLSMaterialFullSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certificate string `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Chain       string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	Key         []byte `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *TLSMaterialFullSpec) Reset() {
	*x = TLSMaterialFullSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSMaterialFullSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSMaterialFullSpec) ProtoMessage() {}

func (x *TLSMaterialFullSpec) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSMaterialFullSpec.ProtoReflect.Descriptor instead.
func (*TLSMaterialFullSpec) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{49}
}

func (x *TLSMaterialFullSpec) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *TLSMaterialFullSpec) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *TLSMaterialFullSpec) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type TLSMaterialFull struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string               `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string               `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ObjectMeta   `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *TLSMaterialFullSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	Status     *TLSMaterialStatus   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *TLSMaterialFull) Reset() {
	*x = TLSMaterialFull{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSMaterialFull) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSMaterialFull) ProtoMessage() {}

func (x *TLSMaterialFull) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSMaterialFull.ProtoReflect.Descriptor instead.
func (*TLSMaterialFull) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{50}
}

func (x *TLSMaterialFull) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *TLSMaterialFull) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *TLSMaterialFull) GetMetadata() *v1beta.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TLSMaterialFull) GetSpec() *TLSMaterialFullSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *TLSMaterialFull) GetStatus() *TLSMaterialStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type TLSManualCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string               `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string               `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ObjectMeta   `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *TLSManualCreateSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *TLSManualCreate) Reset() {
	*x = TLSManualCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSManualCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSManualCreate) ProtoMessage() {}

func (x *TLSManualCreate) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSManualCreate.ProtoReflect.Descriptor instead.
func (*TLSManualCreate) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{51}
}

func (x *TLSManualCreate) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *TLSManualCreate) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *TLSManualCreate) GetMetadata() *v1beta.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TLSManualCreate) GetSpec() *TLSManualCreateSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type TLSManualCreateSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certificate string `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Chain       string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	Key         string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *TLSManualCreateSpec) Reset() {
	*x = TLSManualCreateSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSManualCreateSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSManualCreateSpec) ProtoMessage() {}

func (x *TLSManualCreateSpec) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSManualCreateSpec.ProtoReflect.Descriptor instead.
func (*TLSManualCreateSpec) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{52}
}

func (x *TLSManualCreateSpec) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *TLSManualCreateSpec) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *TLSManualCreateSpec) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type TLSMaterialFullList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string             `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string             `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ListMeta   `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Items      []*TLSMaterialFull `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *TLSMaterialFullList) Reset() {
	*x = TLSMaterialFullList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSMaterialFullList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSMaterialFullList) ProtoMessage() {}

func (x *TLSMaterialFullList) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSMaterialFullList.ProtoReflect.Descriptor instead.
func (*TLSMaterialFullList) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{53}
}

func (x *TLSMaterialFullList) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *TLSMaterialFullList) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *TLSMaterialFullList) GetMetadata() *v1beta.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TLSMaterialFullList) GetItems() []*TLSMaterialFull {
	if x != nil {
		return x.Items
	}
	return nil
}

type TLSConfigurationSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolMin crypto.TLSProtocol_Enum `protobuf:"varint,1,opt,name=protocol_min,json=protocolMin,proto3,enum=crypto.TLSProtocol_Enum" json:"protocol_min,omitempty"`
	ProtocolMax crypto.TLSProtocol_Enum `protobuf:"varint,2,opt,name=protocol_max,json=protocolMax,proto3,enum=crypto.TLSProtocol_Enum" json:"protocol_max,omitempty"`
	// Ciphers for TLS 1.0 to 1.2
	Ciphers []string `protobuf:"bytes,3,rep,name=ciphers,proto3" json:"ciphers,omitempty"`
}

func (x *TLSConfigurationSpec) Reset() {
	*x = TLSConfigurationSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSConfigurationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSConfigurationSpec) ProtoMessage() {}

func (x *TLSConfigurationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSConfigurationSpec.ProtoReflect.Descriptor instead.
func (*TLSConfigurationSpec) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{54}
}

func (x *TLSConfigurationSpec) GetProtocolMin() crypto.TLSProtocol_Enum {
	if x != nil {
		return x.ProtocolMin
	}
	return crypto.TLSProtocol_Enum(0)
}

func (x *TLSConfigurationSpec) GetProtocolMax() crypto.TLSProtocol_Enum {
	if x != nil {
		return x.ProtocolMax
	}
	return crypto.TLSProtocol_Enum(0)
}

func (x *TLSConfigurationSpec) GetCiphers() []string {
	if x != nil {
		return x.Ciphers
	}
	return nil
}

type TLSConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string                `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string                `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ObjectMeta    `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *TLSConfigurationSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *TLSConfiguration) Reset() {
	*x = TLSConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSConfiguration) ProtoMessage() {}

func (x *TLSConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSConfiguration.ProtoReflect.Descriptor instead.
func (*TLSConfiguration) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{55}
}

func (x *TLSConfiguration) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *TLSConfiguration) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *TLSConfiguration) GetMetadata() *v1beta.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TLSConfiguration) GetSpec() *TLSConfigurationSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type TLSConfigurationList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string              `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string              `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ListMeta    `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Items      []*TLSConfiguration `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *TLSConfigurationList) Reset() {
	*x = TLSConfigurationList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSConfigurationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSConfigurationList) ProtoMessage() {}

func (x *TLSConfigurationList) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSConfigurationList.ProtoReflect.Descriptor instead.
func (*TLSConfigurationList) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{56}
}

func (x *TLSConfigurationList) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *TLSConfigurationList) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *TLSConfigurationList) GetMetadata() *v1beta.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TLSConfigurationList) GetItems() []*TLSConfiguration {
	if x != nil {
		return x.Items
	}
	return nil
}

type TLSConfigurationDefault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CiphersAvailable   []string                `protobuf:"bytes,1,rep,name=ciphers_available,json=ciphersAvailable,proto3" json:"ciphers_available,omitempty"`
	CiphersDefault     []string                `protobuf:"bytes,2,rep,name=ciphers_default,json=ciphersDefault,proto3" json:"ciphers_default,omitempty"`
	ProtocolMinDefault crypto.TLSProtocol_Enum `protobuf:"varint,3,opt,name=protocol_min_default,json=protocolMinDefault,proto3,enum=crypto.TLSProtocol_Enum" json:"protocol_min_default,omitempty"`
	ProtocolMaxDefault crypto.TLSProtocol_Enum `protobuf:"varint,4,opt,name=protocol_max_default,json=protocolMaxDefault,proto3,enum=crypto.TLSProtocol_Enum" json:"protocol_max_default,omitempty"`
}

func (x *TLSConfigurationDefault) Reset() {
	*x = TLSConfigurationDefault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSConfigurationDefault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSConfigurationDefault) ProtoMessage() {}

func (x *TLSConfigurationDefault) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSConfigurationDefault.ProtoReflect.Descriptor instead.
func (*TLSConfigurationDefault) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{57}
}

func (x *TLSConfigurationDefault) GetCiphersAvailable() []string {
	if x != nil {
		return x.CiphersAvailable
	}
	return nil
}

func (x *TLSConfigurationDefault) GetCiphersDefault() []string {
	if x != nil {
		return x.CiphersDefault
	}
	return nil
}

func (x *TLSConfigurationDefault) GetProtocolMinDefault() crypto.TLSProtocol_Enum {
	if x != nil {
		return x.ProtocolMinDefault
	}
	return crypto.TLSProtocol_Enum(0)
}

func (x *TLSConfigurationDefault) GetProtocolMaxDefault() crypto.TLSProtocol_Enum {
	if x != nil {
		return x.ProtocolMaxDefault
	}
	return crypto.TLSProtocol_Enum(0)
}

type IPBlacklistSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddresses []string `protobuf:"bytes,1,rep,name=ip_addresses,json=ipAddresses,proto3" json:"ip_addresses,omitempty"`
}

func (x *IPBlacklistSpec) Reset() {
	*x = IPBlacklistSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPBlacklistSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPBlacklistSpec) ProtoMessage() {}

func (x *IPBlacklistSpec) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPBlacklistSpec.ProtoReflect.Descriptor instead.
func (*IPBlacklistSpec) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{58}
}

func (x *IPBlacklistSpec) GetIpAddresses() []string {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

type IPBlacklist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string             `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string             `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ObjectMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *IPBlacklistSpec   `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *IPBlacklist) Reset() {
	*x = IPBlacklist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPBlacklist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPBlacklist) ProtoMessage() {}

func (x *IPBlacklist) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPBlacklist.ProtoReflect.Descriptor instead.
func (*IPBlacklist) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{59}
}

func (x *IPBlacklist) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *IPBlacklist) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *IPBlacklist) GetMetadata() *v1beta.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *IPBlacklist) GetSpec() *IPBlacklistSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type IPBlacklistList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string           `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string           `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v1beta.ListMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Items      []*IPBlacklist   `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *IPBlacklistList) Reset() {
	*x = IPBlacklistList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPBlacklistList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPBlacklistList) ProtoMessage() {}

func (x *IPBlacklistList) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPBlacklistList.ProtoReflect.Descriptor instead.
func (*IPBlacklistList) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{60}
}

func (x *IPBlacklistList) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *IPBlacklistList) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *IPBlacklistList) GetMetadata() *v1beta.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *IPBlacklistList) GetItems() []*IPBlacklist {
	if x != nil {
		return x.Items
	}
	return nil
}

type ExceptionProfileSpec_Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Filters []string `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ExceptionProfileSpec_Rule) Reset() {
	*x = ExceptionProfileSpec_Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExceptionProfileSpec_Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExceptionProfileSpec_Rule) ProtoMessage() {}

func (x *ExceptionProfileSpec_Rule) ProtoReflect() protoreflect.Message {
	mi := &file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExceptionProfileSpec_Rule.ProtoReflect.Descriptor instead.
func (*ExceptionProfileSpec_Rule) Descriptor() ([]byte, []int) {
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ExceptionProfileSpec_Rule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExceptionProfileSpec_Rule) GetFilters() []string {
	if x != nil {
		return x.Filters
	}
	return nil
}

var File_lib_proto_assets_ubika_io_v1beta_asset_proto protoreflect.FileDescriptor

var file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x1a, 0x1f, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x74, 0x6c, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x64, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x22,
	0x54, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x4c, 0x4f, 0x43, 0x4b,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4d,
	0x4f, 0x44, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52,
	0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x43, 0x55, 0x52,
	0x49, 0x54, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10,
	0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xa5, 0x01, 0x0a, 0x14, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x47,
	0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0x34, 0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x3a, 0x08, 0x8a,
	0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x03, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x94, 0x02,
	0x0a, 0x10, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xfa, 0x42, 0x1a, 0x72, 0x18, 0x0a, 0x16,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x17, 0xfa, 0x42, 0x14, 0x72, 0x12, 0x0a, 0x10, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4a,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b,
	0x02, 0x02, 0x08, 0x01, 0x22, 0x84, 0x02, 0x0a, 0x14, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a,
	0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1d, 0xfa, 0x42, 0x1a, 0x72, 0x18, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0xfa, 0x42, 0x18,
	0x72, 0x16, 0x0a, 0x14, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x31,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x3e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e,
	0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x02, 0x22, 0x83, 0x01, 0x0a, 0x09,
	0x41, 0x50, 0x49, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x29, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e,
	0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x72,
	0x07, 0x18, 0x3f, 0xd0, 0x01, 0x01, 0x68, 0x01, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x22, 0x9e, 0x01, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x11, 0x65, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x72, 0x07, 0x18, 0x3f, 0xd0, 0x01, 0x01, 0x68, 0x01,
	0x52, 0x10, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x22, 0xfc, 0x01, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12,
	0x3e, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xfa, 0x42, 0x1a, 0x72, 0x18, 0x0a, 0x16, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xfa,
	0x42, 0x0c, 0x72, 0x0a, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61,
	0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x53, 0x70, 0x65, 0x63, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08,
	0x01, 0x22, 0xb8, 0x01, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x02, 0x22, 0x50, 0x0a, 0x0c,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x03, 0x22, 0xe4,
	0x01, 0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x57, 0x6b, 0x66, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x72, 0x07, 0x18, 0x3f, 0xd0, 0x01, 0x01,
	0x68, 0x01, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x64, 0x0a, 0x0f,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75,
	0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x57, 0x6b, 0x66, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x41, 0x0a, 0x13, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xec, 0x01, 0x0a, 0x15, 0x57, 0x65, 0x62, 0x53, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x22,
	0xd2, 0x01, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x28, 0x0a, 0x24, 0x57, 0x45, 0x42,
	0x5f, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x01, 0x12, 0x22,
	0x0a, 0x1e, 0x57, 0x45, 0x42, 0x5f, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x45, 0x43,
	0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x52, 0x4f, 0x50, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d,
	0x57, 0x45, 0x42, 0x5f, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52,
	0x49, 0x54, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x57,
	0x45, 0x42, 0x5f, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x03,
	0x1a, 0x02, 0x10, 0x01, 0x22, 0x6a, 0x0a, 0x0f, 0x57, 0x65, 0x62, 0x53, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x57, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32,
	0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x57, 0x65, 0x62, 0x53, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x22, 0xa9, 0x05, 0x0a, 0x12, 0x49, 0x50, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x22, 0x92, 0x05, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x24, 0x0a, 0x20, 0x49, 0x50, 0x5f, 0x52, 0x45, 0x50, 0x55, 0x54, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x50, 0x41, 0x4d, 0x5f,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x49, 0x50, 0x5f, 0x52,
	0x45, 0x50, 0x55, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x54,
	0x5f, 0x53, 0x50, 0x41, 0x4d, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x4c, 0x4f, 0x49,
	0x54, 0x10, 0x02, 0x12, 0x28, 0x0a, 0x24, 0x49, 0x50, 0x5f, 0x52, 0x45, 0x50, 0x55, 0x54, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x54, 0x5f, 0x57, 0x49, 0x4e, 0x44,
	0x4f, 0x57, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x4c, 0x4f, 0x49, 0x54, 0x10, 0x02, 0x12, 0x0f, 0x0a,
	0x0b, 0x57, 0x45, 0x42, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x4b, 0x53, 0x10, 0x03, 0x12, 0x24,
	0x0a, 0x20, 0x49, 0x50, 0x5f, 0x52, 0x45, 0x50, 0x55, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x48, 0x52, 0x45, 0x41, 0x54, 0x5f, 0x57, 0x45, 0x42, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43,
	0x4b, 0x53, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4f, 0x54, 0x4e, 0x45, 0x54, 0x53, 0x10,
	0x04, 0x12, 0x20, 0x0a, 0x1c, 0x49, 0x50, 0x5f, 0x52, 0x45, 0x50, 0x55, 0x54, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x54, 0x5f, 0x42, 0x4f, 0x54, 0x4e, 0x45, 0x54,
	0x53, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x43, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x53, 0x10,
	0x05, 0x12, 0x21, 0x0a, 0x1d, 0x49, 0x50, 0x5f, 0x52, 0x45, 0x50, 0x55, 0x54, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x54, 0x5f, 0x53, 0x43, 0x41, 0x4e, 0x4e, 0x45,
	0x52, 0x53, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45, 0x4e, 0x49, 0x41, 0x4c, 0x5f, 0x4f,
	0x46, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x06, 0x12, 0x2a, 0x0a, 0x26, 0x49,
	0x50, 0x5f, 0x52, 0x45, 0x50, 0x55, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x48, 0x52,
	0x45, 0x41, 0x54, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x41, 0x4c, 0x5f, 0x4f, 0x46, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x50, 0x55, 0x54,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x07, 0x12, 0x23, 0x0a, 0x1f, 0x49, 0x50, 0x5f, 0x52, 0x45,
	0x50, 0x55, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x54, 0x5f,
	0x52, 0x45, 0x50, 0x55, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08,
	0x50, 0x48, 0x49, 0x53, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x12, 0x21, 0x0a, 0x1d, 0x49, 0x50,
	0x5f, 0x52, 0x45, 0x50, 0x55, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x48, 0x52, 0x45,
	0x41, 0x54, 0x5f, 0x50, 0x48, 0x49, 0x53, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x12, 0x09, 0x0a,
	0x05, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x10, 0x09, 0x12, 0x1e, 0x0a, 0x1a, 0x49, 0x50, 0x5f, 0x52,
	0x45, 0x50, 0x55, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x54,
	0x5f, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x4f, 0x42, 0x49,
	0x4c, 0x45, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x54, 0x53, 0x10, 0x0a, 0x12, 0x27, 0x0a, 0x23,
	0x49, 0x50, 0x5f, 0x52, 0x45, 0x50, 0x55, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x48,
	0x52, 0x45, 0x41, 0x54, 0x5f, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x48, 0x52, 0x45,
	0x41, 0x54, 0x53, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x4f, 0x52, 0x5f, 0x50, 0x52, 0x4f,
	0x58, 0x59, 0x10, 0x0b, 0x12, 0x22, 0x0a, 0x1e, 0x49, 0x50, 0x5f, 0x52, 0x45, 0x50, 0x55, 0x54,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x54, 0x5f, 0x54, 0x4f, 0x52,
	0x5f, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x10, 0x0b, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xaf, 0x01, 0x0a,
	0x12, 0x49, 0x50, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62,
	0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x49, 0x50,
	0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x74, 0x73, 0x22, 0x9a,
	0x01, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x49, 0x50, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x8c, 0x01, 0x0a,
	0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x45, 0x4f, 0x5f, 0x49, 0x50,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x4c, 0x49, 0x53, 0x54,
	0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x45, 0x4f, 0x5f, 0x49, 0x50, 0x5f, 0x4d, 0x4f, 0x44,
	0x45, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x57, 0x48, 0x49, 0x54, 0x45, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15,
	0x47, 0x45, 0x4f, 0x5f, 0x49, 0x50, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x57, 0x48, 0x49, 0x54,
	0x45, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x02, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xd7, 0x01, 0x0a, 0x0b,
	0x47, 0x65, 0x6f, 0x49, 0x50, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b,
	0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x1e,
	0xfa, 0x42, 0x1b, 0x92, 0x01, 0x18, 0x08, 0x00, 0x10, 0xfa, 0x01, 0x22, 0x11, 0x72, 0x0f, 0x32,
	0x0a, 0x5e, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x32, 0x7d, 0x24, 0x98, 0x01, 0x02, 0x52, 0x09,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x47, 0x65, 0x6f, 0x49, 0x50, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x11, 0x49, 0x50, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b,
	0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x0c, 0x69,
	0x70, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x72, 0x07, 0x18, 0x3f, 0xd0, 0x01, 0x01, 0x68, 0x01, 0x52,
	0x0b, 0x69, 0x70, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xe8, 0x0c, 0x0a,
	0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2e, 0x0a, 0x09, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x10, 0xfa,
	0x42, 0x0d, 0x92, 0x01, 0x0a, 0x08, 0x01, 0x10, 0x64, 0x22, 0x04, 0x72, 0x02, 0x68, 0x01, 0x52,
	0x09, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x0b, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x05, 0x88, 0x01, 0x01, 0x52, 0x0a, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x3f, 0x0a, 0x08, 0x74, 0x6c, 0x73, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x2e, 0x54, 0x4c, 0x53, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x07, 0x74, 0x6c, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x5f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x50, 0x49, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x61, 0x70, 0x69, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x5d, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x01, 0x52, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x58,
	0x0a, 0x11, 0x77, 0x65, 0x62, 0x5f, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x2e, 0x57, 0x65, 0x62, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x48, 0x02, 0x52, 0x0f, 0x77, 0x65, 0x62, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x61, 0x0a, 0x14, 0x69, 0x70, 0x5f, 0x72,
	0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e,
	0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e,
	0x49, 0x50, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x48, 0x03, 0x52, 0x12, 0x69, 0x70, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x0d, 0x67,
	0x65, 0x6f, 0x5f, 0x69, 0x70, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b,
	0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x6f, 0x49,
	0x50, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x04, 0x52, 0x0b, 0x67, 0x65, 0x6f, 0x49, 0x70,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x58, 0x0a, 0x11, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x77, 0x6b, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62,
	0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x57, 0x6b, 0x66, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x05, 0x52,
	0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x57, 0x6b, 0x66, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x5e, 0x0a, 0x13, 0x69, 0x70, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e,
	0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x49, 0x50, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x06, 0x52, 0x11, 0x69,
	0x70, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x0c, 0x74, 0x6c, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x72, 0x07,
	0x18, 0x3f, 0xd0, 0x01, 0x01, 0x68, 0x01, 0x52, 0x0b, 0x74, 0x6c, 0x73, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x11, 0x74, 0x6c, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xfa, 0x42, 0x09, 0x72, 0x07, 0x18, 0x3f, 0xd0, 0x01, 0x01, 0x68, 0x01, 0x52, 0x10, 0x74,
	0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x31, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x72, 0x07, 0x18, 0x3f, 0xd0,
	0x01, 0x01, 0x68, 0x01, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x39, 0x0a, 0x11, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xfa,
	0x42, 0x09, 0x72, 0x07, 0x18, 0x3f, 0xd0, 0x01, 0x01, 0x68, 0x01, 0x52, 0x10, 0x65, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x37, 0x0a,
	0x10, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x72, 0x07, 0x18, 0x3f,
	0xd0, 0x01, 0x01, 0x68, 0x01, 0x52, 0x0f, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x10, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xfa, 0x42, 0x09, 0x72, 0x07, 0x18, 0x3f, 0xd0, 0x01, 0x01, 0x68, 0x01, 0x52, 0x0f,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x2f, 0x0a, 0x13, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x5a, 0x0a, 0x19, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x70, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1f, 0xfa, 0x42, 0x1c, 0x72, 0x1a, 0x32, 0x15, 0x5e, 0x5b, 0x61, 0x2d,
	0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5f, 0x2d, 0x5d, 0x7b, 0x30, 0x2c, 0x34, 0x30, 0x7d,
	0x24, 0xd0, 0x01, 0x01, 0x52, 0x16, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x49, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x7a, 0x0a, 0x19,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x34, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69,
	0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x17, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02,
	0x08, 0x03, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x77, 0x65, 0x62,
	0x5f, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x17,
	0x0a, 0x15, 0x5f, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x67, 0x65, 0x6f, 0x5f,
	0x69, 0x70, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x77, 0x6b, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42,
	0x16, 0x0a, 0x14, 0x5f, 0x69, 0x70, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x0c, 0x42, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x04, 0x45, 0x6e, 0x75,
	0x6d, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x41, 0x43,
	0x4b, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12,
	0x12, 0x0a, 0x0e, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x35, 0x58,
	0x58, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x42, 0x41, 0x43, 0x4b, 0x45, 0x4e, 0x44, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x35, 0x58, 0x58, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54,
	0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x41, 0x43, 0x4b, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x02, 0x10,
	0x01, 0x22, 0xa5, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f,
	0x0a, 0x1b, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x53, 0x41, 0x41, 0x53, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x45, 0x50,
	0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x41,
	0x53, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x45, 0x4c, 0x46, 0x5f, 0x48, 0x4f, 0x53, 0x54,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x46, 0x5f, 0x48, 0x4f, 0x53,
	0x54, 0x45, 0x44, 0x10, 0x02, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xc6, 0x01, 0x0a, 0x17, 0x42, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x22, 0xaa, 0x01, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0f,
	0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x29, 0x0a, 0x25, 0x42, 0x41, 0x43, 0x4b, 0x45, 0x4e, 0x44, 0x5f, 0x43, 0x45, 0x52, 0x54, 0x49,
	0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49,
	0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x26, 0x0a, 0x22, 0x42, 0x41, 0x43, 0x4b,
	0x45, 0x4e, 0x44, 0x5f, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f,
	0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x42, 0x41,
	0x43, 0x4b, 0x45, 0x4e, 0x44, 0x5f, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54,
	0x45, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x02, 0x1a, 0x02,
	0x10, 0x01, 0x22, 0x9b, 0x01, 0x0a, 0x08, 0x44, 0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x8e, 0x01, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45,
	0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x4e, 0x53, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x18, 0x0a, 0x14, 0x44, 0x4e, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45,
	0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f,
	0x54, 0x5f, 0x52, 0x45, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1c,
	0x0a, 0x18, 0x44, 0x4e, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x52, 0x45, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x1a, 0x02, 0x10, 0x01,
	0x22, 0x8c, 0x02, 0x0a, 0x0a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x43, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x29, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e,
	0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x07, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x64, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61,
	0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x44, 0x6e, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x03, 0x64, 0x6e, 0x73, 0x12, 0x4d, 0x0a,
	0x0c, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69,
	0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x52, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c,
	0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x14,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x65, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22,
	0x91, 0x01, 0x0a, 0x0c, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x80, 0x01, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e,
	0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4c, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13,
	0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x4c,
	0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x1a,
	0x02, 0x10, 0x01, 0x22, 0x70, 0x0a, 0x07, 0x54, 0x4c, 0x53, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x65,
	0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x54, 0x4c, 0x53, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x54, 0x4c, 0x53, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x55, 0x53, 0x54,
	0x4f, 0x4d, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x02, 0x12, 0x11,
	0x0a, 0x0d, 0x54, 0x4c, 0x53, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x10,
	0x02, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x85, 0x01, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54,
	0x6c, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x73, 0x5f, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x73, 0x4f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x4f, 0x6e, 0x12, 0x38, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x24, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61,
	0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x54, 0x4c, 0x53, 0x4d, 0x6f,
	0x64, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0xb3, 0x01,
	0x0a, 0x0b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75,
	0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x37, 0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x6c, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02,
	0x02, 0x08, 0x04, 0x22, 0xb0, 0x02, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x3e, 0x0a,
	0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1d, 0xfa, 0x42, 0x1a, 0x72, 0x18, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09,
	0x72, 0x07, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3f,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12,
	0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69,
	0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x08, 0x8a, 0x9b,
	0xb5, 0x9b, 0x02, 0x02, 0x08, 0x01, 0x22, 0xe3, 0x01, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xfa, 0x42, 0x1a, 0x72, 0x18,
	0x0a, 0x16, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69,
	0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x10, 0xfa, 0x42, 0x0d, 0x72, 0x0b, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x02, 0x22, 0x3b, 0x0a, 0x0b,
	0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x53, 0x70, 0x65, 0x63, 0x12, 0x22, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x28, 0x80, 0x80, 0x80, 0x01, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a,
	0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x03, 0x22, 0xb6, 0x01, 0x0a, 0x07, 0x4f, 0x70,
	0x65, 0x6e, 0x41, 0x50, 0x49, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x37, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02,
	0x08, 0x01, 0x22, 0xb6, 0x01, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x02, 0x22, 0x81, 0x02, 0x0a, 0x0d,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a,
	0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1d, 0xfa, 0x42, 0x1a, 0x72, 0x18, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x11,
	0x72, 0x0f, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62,
	0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x01, 0x22,
	0x87, 0x01, 0x0a, 0x11, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x28, 0x80, 0x80, 0x80, 0x01, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xfa, 0x42, 0x22,
	0x72, 0x20, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x68, 0x74, 0x6d, 0x6c, 0x52, 0x10, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0xd0,
	0x01, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3a,
	0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x03, 0x22, 0xc2, 0x01, 0x0a, 0x11, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e,
	0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x02, 0x22, 0x9c,
	0x01, 0x0a, 0x09, 0x43, 0x53, 0x52, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06,
	0x72, 0x04, 0x18, 0x3f, 0x68, 0x01, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x2a, 0x0a,
	0x09, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x22, 0x04, 0x72, 0x02, 0x68, 0x01, 0x52, 0x09,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x54, 0x4c, 0x53, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x04, 0x22, 0x3a, 0x0a,
	0x0d, 0x43, 0x53, 0x52, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1f,
	0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x18, 0x3f, 0x68, 0x01, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x3a,
	0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x03, 0x22, 0xff, 0x01, 0x0a, 0x09, 0x43, 0x53,
	0x52, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xfa, 0x42,
	0x1a, 0x72, 0x18, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b,
	0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x70, 0x69,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xfa, 0x42, 0x0d, 0x72, 0x0b, 0x0a, 0x09, 0x43, 0x53,
	0x52, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x3d, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x43, 0x53, 0x52, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x01, 0x22, 0x25, 0x0a, 0x07, 0x43,
	0x53, 0x52, 0x53, 0x70, 0x65, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x73, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73, 0x72, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02,
	0x08, 0x03, 0x22, 0xa8, 0x02, 0x0a, 0x03, 0x43, 0x53, 0x52, 0x12, 0x3e, 0x0a, 0x0b, 0x61, 0x70,
	0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1d, 0xfa, 0x42, 0x1a, 0x72, 0x18, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75,
	0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x52, 0x0a,
	0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x0a,
	0x03, 0x43, 0x53, 0x52, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x2e, 0x43, 0x53, 0x52, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b,
	0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x53, 0x52, 0x53,
	0x70, 0x65, 0x63, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x01, 0x22, 0xdd, 0x01,
	0x0a, 0x07, 0x43, 0x53, 0x52, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x61, 0x70, 0x69,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d,
	0xfa, 0x42, 0x1a, 0x72, 0x18, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62,
	0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x61,
	0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x72, 0x09, 0x0a, 0x07,
	0x43, 0x53, 0x52, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x31, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x31, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69,
	0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x53, 0x52, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x02, 0x22, 0x3b, 0x0a,
	0x0b, 0x43, 0x53, 0x52, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x73, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x03, 0x22, 0xb4, 0x02, 0x0a, 0x07, 0x43,
	0x53, 0x52, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x3e, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xfa, 0x42, 0x1a,
	0x72, 0x18, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61,
	0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x72, 0x09, 0x0a, 0x07, 0x43, 0x53, 0x52,
	0x46, 0x75, 0x6c, 0x6c, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x2e, 0x43, 0x53, 0x52, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b,
	0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x53, 0x52, 0x46,
	0x75, 0x6c, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08,
	0x01, 0x22, 0x73, 0x0a, 0x12, 0x43, 0x53, 0x52, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1b, 0x0a, 0x03, 0x63, 0x73, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x18, 0x3f, 0x68, 0x01, 0x52,
	0x03, 0x63, 0x73, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x08, 0x8a, 0x9b,
	0xb5, 0x9b, 0x02, 0x02, 0x08, 0x03, 0x22, 0x8e, 0x02, 0x0a, 0x0e, 0x43, 0x53, 0x52, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x61, 0x70, 0x69,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d,
	0xfa, 0x42, 0x1a, 0x72, 0x18, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62,
	0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x61,
	0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xfa, 0x42, 0x12, 0x72, 0x10, 0x0a, 0x0e,
	0x43, 0x53, 0x52, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61,
	0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x53, 0x52, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x3a, 0x08, 0x8a,
	0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x01, 0x22, 0x53, 0x0a, 0x0f, 0x54, 0x4c, 0x53, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x03, 0x22, 0xc8, 0x02, 0x0a,
	0x0b, 0x54, 0x4c, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x3e, 0x0a, 0x0b,
	0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1d, 0xfa, 0x42, 0x1a, 0x72, 0x18, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xfa, 0x42, 0x0f, 0x72,
	0x0d, 0x0a, 0x0b, 0x54, 0x4c, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61,
	0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x54, 0x4c, 0x53, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x54, 0x4c, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x08, 0x8a,
	0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x01, 0x22, 0xf1, 0x01, 0x0a, 0x0f, 0x54, 0x4c, 0x53, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x61,
	0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x1d, 0xfa, 0x42, 0x1a, 0x72, 0x18, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e,
	0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x52,
	0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xfa, 0x42, 0x0f, 0x72, 0x0d,
	0x0a, 0x0b, 0x54, 0x4c, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75,
	0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x54,
	0x4c, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x02, 0x22, 0xbd, 0x02, 0x0a, 0x11,
	0x54, 0x4c, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x38, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x24, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69,
	0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x54, 0x4c, 0x53, 0x4d, 0x6f, 0x64, 0x65,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0c,
	0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x22, 0x04, 0x72, 0x02, 0x68, 0x01, 0x52, 0x09, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x5f, 0x62,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x42, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x43,
	0x4e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x43,
	0x4e, 0x12, 0x0e, 0x0a, 0x02, 0x43, 0x4e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x43,
	0x4e, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x04, 0x22, 0x69, 0x0a, 0x13, 0x54,
	0x4c, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x3a, 0x08, 0x8a, 0x9b,
	0xb5, 0x9b, 0x02, 0x02, 0x08, 0x03, 0x22, 0xd4, 0x02, 0x0a, 0x0f, 0x54, 0x4c, 0x53, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x3e, 0x0a, 0x0b, 0x61, 0x70,
	0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1d, 0xfa, 0x42, 0x1a, 0x72, 0x18, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75,
	0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x52, 0x0a,
	0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xfa, 0x42, 0x13, 0x72, 0x11, 0x0a,
	0x0f, 0x54, 0x4c, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x46, 0x75, 0x6c, 0x6c,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69,
	0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x54, 0x4c, 0x53,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x70, 0x65, 0x63,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e,
	0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x54, 0x4c, 0x53, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x01, 0x22, 0x91, 0x02,
	0x0a, 0x0f, 0x54, 0x4c, 0x53, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xfa, 0x42, 0x1a, 0x72, 0x18, 0x0a, 0x16, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2a, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x16, 0xfa, 0x42, 0x13, 0x72, 0x11, 0x0a, 0x0f, 0x54, 0x4c, 0x53, 0x4d, 0x61, 0x6e, 0x75, 0x61,
	0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x3d, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x54, 0x4c, 0x53, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08,
	0x01, 0x22, 0x73, 0x0a, 0x13, 0x54, 0x4c, 0x53, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x05, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0xd0, 0x01, 0x01, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x3a, 0x08, 0x8a, 0x9b,
	0xb5, 0x9b, 0x02, 0x02, 0x08, 0x03, 0x22, 0x81, 0x02, 0x0a, 0x13, 0x54, 0x4c, 0x53, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x46, 0x75, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e,
	0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1d, 0xfa, 0x42, 0x1a, 0x72, 0x18, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e,
	0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x42,
	0x17, 0x72, 0x15, 0x0a, 0x13, 0x54, 0x4c, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x46, 0x75, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x31,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x3d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e,
	0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x54, 0x4c, 0x53, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x02, 0x22, 0xb4, 0x01, 0x0a, 0x14, 0x54,
	0x4c, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x3b, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f,
	0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x53, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45,
	0x6e, 0x75, 0x6d, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d, 0x69, 0x6e,
	0x12, 0x3b, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x6d, 0x61, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e,
	0x54, 0x4c, 0x53, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d, 0x61, 0x78, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x73, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08,
	0x03, 0x22, 0x94, 0x02, 0x0a, 0x10, 0x54, 0x4c, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xfa, 0x42, 0x1a,
	0x72, 0x18, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61,
	0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x42, 0x14, 0x72, 0x12, 0x0a, 0x10, 0x54, 0x4c, 0x53,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x4a, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e,
	0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x54, 0x4c, 0x53, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x3a, 0x08,
	0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x01, 0x22, 0x84, 0x02, 0x0a, 0x14, 0x54, 0x4c, 0x53,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xfa, 0x42, 0x1a, 0x72, 0x18, 0x0a, 0x16, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2f, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1b, 0xfa, 0x42, 0x18, 0x72, 0x16, 0x0a, 0x14, 0x54, 0x4c, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62,
	0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x54, 0x4c,
	0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x02, 0x22,
	0x87, 0x02, 0x0a, 0x17, 0x54, 0x4c, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x63,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x73, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x4a, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x6d, 0x69,
	0x6e, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x53, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x4d, 0x69, 0x6e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x4a, 0x0a,
	0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x53, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d,
	0x61, 0x78, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x4c, 0x0a, 0x0f, 0x49, 0x50, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2f, 0x0a, 0x0c,
	0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x22, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x3a, 0x08, 0x8a,
	0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x03, 0x22, 0x85, 0x02, 0x0a, 0x0b, 0x49, 0x50, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xfa, 0x42,
	0x1a, 0x72, 0x18, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b,
	0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x70, 0x69,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xfa, 0x42, 0x0f, 0x72, 0x0d, 0x0a, 0x0b, 0x49, 0x50,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x45,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x49, 0x50, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x3a, 0x08, 0x8a, 0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x01, 0x22,
	0xf5, 0x01, 0x0a, 0x0f, 0x49, 0x50, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xfa, 0x42, 0x1a, 0x72, 0x18, 0x0a,
	0x16, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f,
	0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x16, 0xfa, 0x42, 0x13, 0x72, 0x11, 0x0a, 0x0f, 0x49, 0x50, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x31, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x75, 0x62, 0x69, 0x6b, 0x61,
	0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x49, 0x50, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x3a, 0x08, 0x8a,
	0x9b, 0xb5, 0x9b, 0x02, 0x02, 0x08, 0x02, 0x42, 0x3d, 0x5a, 0x3b, 0x72, 0x2e, 0x75, 0x6e, 0x64,
	0x2e, 0x73, 0x2f, 0x64, 0x65, 0x76, 0x73, 0x65, 0x63, 0x6f, 0x70, 0x73, 0x2f, 0x6c, 0x69, 0x62,
	0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e,
	0x75, 0x62, 0x69, 0x6b, 0x61, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x3b,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescOnce sync.Once
	file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescData = file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDesc
)

func file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescGZIP() []byte {
	file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescOnce.Do(func() {
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescData = protoimpl.X.CompressGZIP(file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescData)
	})
	return file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDescData
}

var file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes = make([]protoimpl.MessageInfo, 63)
var file_lib_proto_assets_ubika_io_v1beta_asset_proto_goTypes = []interface{}{
	(SecurityMode_Enum)(0),            // 0: assets.ubika.io.v1beta.SecurityMode.Enum
	(WebSocketSecurityMode_Enum)(0),   // 1: assets.ubika.io.v1beta.WebSocketSecurityMode.Enum
	(IPReputationThreat_Enum)(0),      // 2: assets.ubika.io.v1beta.IPReputationThreat.Enum
	(GeoIPMode_Enum)(0),               // 3: assets.ubika.io.v1beta.GeoIPMode.Enum
	(BackendState_Enum)(0),            // 4: assets.ubika.io.v1beta.BackendState.Enum
	(DeploymentType_Enum)(0),          // 5: assets.ubika.io.v1beta.DeploymentType.Enum
	(BackendCertificateCheck_Enum)(0), // 6: assets.ubika.io.v1beta.BackendCertificateCheck.Enum
	(DnsState_Enum)(0),                // 7: assets.ubika.io.v1beta.DnsState.Enum
	(RunningState_Enum)(0),            // 8: assets.ubika.io.v1beta.RunningState.Enum
	(TLSMode_Enum)(0),                 // 9: assets.ubika.io.v1beta.TLSMode.Enum
	(*SecurityMode)(nil),              // 10: assets.ubika.io.v1beta.SecurityMode
	(*ExceptionProfileSpec)(nil),      // 11: assets.ubika.io.v1beta.ExceptionProfileSpec
	(*ExceptionProfile)(nil),          // 12: assets.ubika.io.v1beta.ExceptionProfile
	(*ExceptionProfileList)(nil),      // 13: assets.ubika.io.v1beta.ExceptionProfileList
	(*APIModule)(nil),                 // 14: assets.ubika.io.v1beta.APIModule
	(*ApplicationModule)(nil),         // 15: assets.ubika.io.v1beta.ApplicationModule
	(*Workflow)(nil),                  // 16: assets.ubika.io.v1beta.Workflow
	(*WorkflowList)(nil),              // 17: assets.ubika.io.v1beta.WorkflowList
	(*WorkflowSpec)(nil),              // 18: assets.ubika.io.v1beta.WorkflowSpec
	(*CustomWkfModule)(nil),           // 19: assets.ubika.io.v1beta.CustomWkfModule
	(*WebSocketSecurityMode)(nil),     // 20: assets.ubika.io.v1beta.WebSocketSecurityMode
	(*WebSocketModule)(nil),           // 21: assets.ubika.io.v1beta.WebSocketModule
	(*IPReputationThreat)(nil),        // 22: assets.ubika.io.v1beta.IPReputationThreat
	(*IPReputationModule)(nil),        // 23: assets.ubika.io.v1beta.IPReputationModule
	(*GeoIPMode)(nil),                 // 24: assets.ubika.io.v1beta.GeoIPMode
	(*GeoIPModule)(nil),               // 25: assets.ubika.io.v1beta.GeoIPModule
	(*IPBlacklistModule)(nil),         // 26: assets.ubika.io.v1beta.IPBlacklistModule
	(*AssetSpec)(nil),                 // 27: assets.ubika.io.v1beta.AssetSpec
	(*BackendState)(nil),              // 28: assets.ubika.io.v1beta.BackendState
	(*DeploymentType)(nil),            // 29: assets.ubika.io.v1beta.DeploymentType
	(*BackendCertificateCheck)(nil),   // 30: assets.ubika.io.v1beta.BackendCertificateCheck
	(*DnsState)(nil),                  // 31: assets.ubika.io.v1beta.DnsState
	(*AssetState)(nil),                // 32: assets.ubika.io.v1beta.AssetState
	(*RunningState)(nil),              // 33: assets.ubika.io.v1beta.RunningState
	(*TLSMode)(nil),                   // 34: assets.ubika.io.v1beta.TLSMode
	(*AssetTlsState)(nil),             // 35: assets.ubika.io.v1beta.AssetTlsState
	(*AssetStatus)(nil),               // 36: assets.ubika.io.v1beta.AssetStatus
	(*Asset)(nil),                     // 37: assets.ubika.io.v1beta.Asset
	(*AssetList)(nil),                 // 38: assets.ubika.io.v1beta.AssetList
	(*OpenAPISpec)(nil),               // 39: assets.ubika.io.v1beta.OpenAPISpec
	(*OpenAPI)(nil),                   // 40: assets.ubika.io.v1beta.OpenAPI
	(*OpenAPIList)(nil),               // 41: assets.ubika.io.v1beta.OpenAPIList
	(*ErrorDocument)(nil),             // 42: assets.ubika.io.v1beta.ErrorDocument
	(*ErrorDocumentSpec)(nil),         // 43: assets.ubika.io.v1beta.ErrorDocumentSpec
	(*ErrorDocumentList)(nil),         // 44: assets.ubika.io.v1beta.ErrorDocumentList
	(*CSRStatus)(nil),                 // 45: assets.ubika.io.v1beta.CSRStatus
	(*CSRCreateSpec)(nil),             // 46: assets.ubika.io.v1beta.CSRCreateSpec
	(*CSRCreate)(nil),                 // 47: assets.ubika.io.v1beta.CSRCreate
	(*CSRSpec)(nil),                   // 48: assets.ubika.io.v1beta.CSRSpec
	(*CSR)(nil),                       // 49: assets.ubika.io.v1beta.CSR
	(*CSRList)(nil),                   // 50: assets.ubika.io.v1beta.CSRList
	(*CSRFullSpec)(nil),               // 51: assets.ubika.io.v1beta.CSRFullSpec
	(*CSRFull)(nil),                   // 52: assets.ubika.io.v1beta.CSRFull
	(*CSRCertificateSpec)(nil),        // 53: assets.ubika.io.v1beta.CSRCertificateSpec
	(*CSRCertificate)(nil),            // 54: assets.ubika.io.v1beta.CSRCertificate
	(*TLSMaterialSpec)(nil),           // 55: assets.ubika.io.v1beta.TLSMaterialSpec
	(*TLSMaterial)(nil),               // 56: assets.ubika.io.v1beta.TLSMaterial
	(*TLSMaterialList)(nil),           // 57: assets.ubika.io.v1beta.TLSMaterialList
	(*TLSMaterialStatus)(nil),         // 58: assets.ubika.io.v1beta.TLSMaterialStatus
	(*TLSMaterialFullSpec)(nil),       // 59: assets.ubika.io.v1beta.TLSMaterialFullSpec
	(*TLSMaterialFull)(nil),           // 60: assets.ubika.io.v1beta.TLSMaterialFull
	(*TLSManualCreate)(nil),           // 61: assets.ubika.io.v1beta.TLSManualCreate
	(*TLSManualCreateSpec)(nil),       // 62: assets.ubika.io.v1beta.TLSManualCreateSpec
	(*TLSMaterialFullList)(nil),       // 63: assets.ubika.io.v1beta.TLSMaterialFullList
	(*TLSConfigurationSpec)(nil),      // 64: assets.ubika.io.v1beta.TLSConfigurationSpec
	(*TLSConfiguration)(nil),          // 65: assets.ubika.io.v1beta.TLSConfiguration
	(*TLSConfigurationList)(nil),      // 66: assets.ubika.io.v1beta.TLSConfigurationList
	(*TLSConfigurationDefault)(nil),   // 67: assets.ubika.io.v1beta.TLSConfigurationDefault
	(*IPBlacklistSpec)(nil),           // 68: assets.ubika.io.v1beta.IPBlacklistSpec
	(*IPBlacklist)(nil),               // 69: assets.ubika.io.v1beta.IPBlacklist
	(*IPBlacklistList)(nil),           // 70: assets.ubika.io.v1beta.IPBlacklistList
	(*ExceptionProfileSpec_Rule)(nil), // 71: assets.ubika.io.v1beta.ExceptionProfileSpec.Rule
	nil,                               // 72: assets.ubika.io.v1beta.CustomWkfModule.WorkflowParamsEntry
	(*v1beta.ObjectMeta)(nil),         // 73: meta.v1beta.ObjectMeta
	(*v1beta.ListMeta)(nil),           // 74: meta.v1beta.ListMeta
	(*timestamppb.Timestamp)(nil),     // 75: google.protobuf.Timestamp
	(crypto.TLSProtocol_Enum)(0),      // 76: crypto.TLSProtocol.Enum
}
var file_lib_proto_assets_ubika_io_v1beta_asset_proto_depIdxs = []int32{
	71, // 0: assets.ubika.io.v1beta.ExceptionProfileSpec.rules:type_name -> assets.ubika.io.v1beta.ExceptionProfileSpec.Rule
	73, // 1: assets.ubika.io.v1beta.ExceptionProfile.metadata:type_name -> meta.v1beta.ObjectMeta
	11, // 2: assets.ubika.io.v1beta.ExceptionProfile.spec:type_name -> assets.ubika.io.v1beta.ExceptionProfileSpec
	74, // 3: assets.ubika.io.v1beta.ExceptionProfileList.metadata:type_name -> meta.v1beta.ListMeta
	12, // 4: assets.ubika.io.v1beta.ExceptionProfileList.items:type_name -> assets.ubika.io.v1beta.ExceptionProfile
	0,  // 5: assets.ubika.io.v1beta.APIModule.security_mode:type_name -> assets.ubika.io.v1beta.SecurityMode.Enum
	0,  // 6: assets.ubika.io.v1beta.ApplicationModule.security_mode:type_name -> assets.ubika.io.v1beta.SecurityMode.Enum
	73, // 7: assets.ubika.io.v1beta.Workflow.metadata:type_name -> meta.v1beta.ObjectMeta
	18, // 8: assets.ubika.io.v1beta.Workflow.spec:type_name -> assets.ubika.io.v1beta.WorkflowSpec
	74, // 9: assets.ubika.io.v1beta.WorkflowList.metadata:type_name -> meta.v1beta.ListMeta
	16, // 10: assets.ubika.io.v1beta.WorkflowList.items:type_name -> assets.ubika.io.v1beta.Workflow
	72, // 11: assets.ubika.io.v1beta.CustomWkfModule.workflow_params:type_name -> assets.ubika.io.v1beta.CustomWkfModule.WorkflowParamsEntry
	1,  // 12: assets.ubika.io.v1beta.WebSocketModule.security_mode:type_name -> assets.ubika.io.v1beta.WebSocketSecurityMode.Enum
	0,  // 13: assets.ubika.io.v1beta.IPReputationModule.security_mode:type_name -> assets.ubika.io.v1beta.SecurityMode.Enum
	2,  // 14: assets.ubika.io.v1beta.IPReputationModule.threats:type_name -> assets.ubika.io.v1beta.IPReputationThreat.Enum
	0,  // 15: assets.ubika.io.v1beta.GeoIPModule.security_mode:type_name -> assets.ubika.io.v1beta.SecurityMode.Enum
	3,  // 16: assets.ubika.io.v1beta.GeoIPModule.mode:type_name -> assets.ubika.io.v1beta.GeoIPMode.Enum
	0,  // 17: assets.ubika.io.v1beta.IPBlacklistModule.security_mode:type_name -> assets.ubika.io.v1beta.SecurityMode.Enum
	9,  // 18: assets.ubika.io.v1beta.AssetSpec.tls_mode:type_name -> assets.ubika.io.v1beta.TLSMode.Enum
	14, // 19: assets.ubika.io.v1beta.AssetSpec.api_module:type_name -> assets.ubika.io.v1beta.APIModule
	15, // 20: assets.ubika.io.v1beta.AssetSpec.application_module:type_name -> assets.ubika.io.v1beta.ApplicationModule
	21, // 21: assets.ubika.io.v1beta.AssetSpec.web_socket_module:type_name -> assets.ubika.io.v1beta.WebSocketModule
	23, // 22: assets.ubika.io.v1beta.AssetSpec.ip_reputation_module:type_name -> assets.ubika.io.v1beta.IPReputationModule
	25, // 23: assets.ubika.io.v1beta.AssetSpec.geo_ip_module:type_name -> assets.ubika.io.v1beta.GeoIPModule
	19, // 24: assets.ubika.io.v1beta.AssetSpec.custom_wkf_module:type_name -> assets.ubika.io.v1beta.CustomWkfModule
	26, // 25: assets.ubika.io.v1beta.AssetSpec.ip_blacklist_module:type_name -> assets.ubika.io.v1beta.IPBlacklistModule
	5,  // 26: assets.ubika.io.v1beta.AssetSpec.deployment_type:type_name -> assets.ubika.io.v1beta.DeploymentType.Enum
	6,  // 27: assets.ubika.io.v1beta.AssetSpec.backend_certificate_check:type_name -> assets.ubika.io.v1beta.BackendCertificateCheck.Enum
	4,  // 28: assets.ubika.io.v1beta.AssetState.backend:type_name -> assets.ubika.io.v1beta.BackendState.Enum
	7,  // 29: assets.ubika.io.v1beta.AssetState.dns:type_name -> assets.ubika.io.v1beta.DnsState.Enum
	8,  // 30: assets.ubika.io.v1beta.AssetState.runningstate:type_name -> assets.ubika.io.v1beta.RunningState.Enum
	9,  // 31: assets.ubika.io.v1beta.AssetTlsState.mode:type_name -> assets.ubika.io.v1beta.TLSMode.Enum
	32, // 32: assets.ubika.io.v1beta.AssetStatus.state:type_name -> assets.ubika.io.v1beta.AssetState
	35, // 33: assets.ubika.io.v1beta.AssetStatus.tls:type_name -> assets.ubika.io.v1beta.AssetTlsState
	73, // 34: assets.ubika.io.v1beta.Asset.metadata:type_name -> meta.v1beta.ObjectMeta
	27, // 35: assets.ubika.io.v1beta.Asset.spec:type_name -> assets.ubika.io.v1beta.AssetSpec
	36, // 36: assets.ubika.io.v1beta.Asset.status:type_name -> assets.ubika.io.v1beta.AssetStatus
	74, // 37: assets.ubika.io.v1beta.AssetList.metadata:type_name -> meta.v1beta.ListMeta
	37, // 38: assets.ubika.io.v1beta.AssetList.items:type_name -> assets.ubika.io.v1beta.Asset
	73, // 39: assets.ubika.io.v1beta.OpenAPI.metadata:type_name -> meta.v1beta.ObjectMeta
	39, // 40: assets.ubika.io.v1beta.OpenAPI.spec:type_name -> assets.ubika.io.v1beta.OpenAPISpec
	74, // 41: assets.ubika.io.v1beta.OpenAPIList.metadata:type_name -> meta.v1beta.ListMeta
	40, // 42: assets.ubika.io.v1beta.OpenAPIList.items:type_name -> assets.ubika.io.v1beta.OpenAPI
	73, // 43: assets.ubika.io.v1beta.ErrorDocument.metadata:type_name -> meta.v1beta.ObjectMeta
	43, // 44: assets.ubika.io.v1beta.ErrorDocument.spec:type_name -> assets.ubika.io.v1beta.ErrorDocumentSpec
	74, // 45: assets.ubika.io.v1beta.ErrorDocumentList.metadata:type_name -> meta.v1beta.ListMeta
	42, // 46: assets.ubika.io.v1beta.ErrorDocumentList.items:type_name -> assets.ubika.io.v1beta.ErrorDocument
	9,  // 47: assets.ubika.io.v1beta.CSRStatus.mode:type_name -> assets.ubika.io.v1beta.TLSMode.Enum
	73, // 48: assets.ubika.io.v1beta.CSRCreate.metadata:type_name -> meta.v1beta.ObjectMeta
	46, // 49: assets.ubika.io.v1beta.CSRCreate.spec:type_name -> assets.ubika.io.v1beta.CSRCreateSpec
	73, // 50: assets.ubika.io.v1beta.CSR.metadata:type_name -> meta.v1beta.ObjectMeta
	45, // 51: assets.ubika.io.v1beta.CSR.status:type_name -> assets.ubika.io.v1beta.CSRStatus
	48, // 52: assets.ubika.io.v1beta.CSR.spec:type_name -> assets.ubika.io.v1beta.CSRSpec
	74, // 53: assets.ubika.io.v1beta.CSRList.metadata:type_name -> meta.v1beta.ListMeta
	49, // 54: assets.ubika.io.v1beta.CSRList.items:type_name -> assets.ubika.io.v1beta.CSR
	73, // 55: assets.ubika.io.v1beta.CSRFull.metadata:type_name -> meta.v1beta.ObjectMeta
	45, // 56: assets.ubika.io.v1beta.CSRFull.status:type_name -> assets.ubika.io.v1beta.CSRStatus
	51, // 57: assets.ubika.io.v1beta.CSRFull.spec:type_name -> assets.ubika.io.v1beta.CSRFullSpec
	73, // 58: assets.ubika.io.v1beta.CSRCertificate.metadata:type_name -> meta.v1beta.ObjectMeta
	53, // 59: assets.ubika.io.v1beta.CSRCertificate.spec:type_name -> assets.ubika.io.v1beta.CSRCertificateSpec
	73, // 60: assets.ubika.io.v1beta.TLSMaterial.metadata:type_name -> meta.v1beta.ObjectMeta
	55, // 61: assets.ubika.io.v1beta.TLSMaterial.spec:type_name -> assets.ubika.io.v1beta.TLSMaterialSpec
	58, // 62: assets.ubika.io.v1beta.TLSMaterial.status:type_name -> assets.ubika.io.v1beta.TLSMaterialStatus
	74, // 63: assets.ubika.io.v1beta.TLSMaterialList.metadata:type_name -> meta.v1beta.ListMeta
	56, // 64: assets.ubika.io.v1beta.TLSMaterialList.items:type_name -> assets.ubika.io.v1beta.TLSMaterial
	9,  // 65: assets.ubika.io.v1beta.TLSMaterialStatus.mode:type_name -> assets.ubika.io.v1beta.TLSMode.Enum
	75, // 66: assets.ubika.io.v1beta.TLSMaterialStatus.not_before:type_name -> google.protobuf.Timestamp
	75, // 67: assets.ubika.io.v1beta.TLSMaterialStatus.not_after:type_name -> google.protobuf.Timestamp
	73, // 68: assets.ubika.io.v1beta.TLSMaterialFull.metadata:type_name -> meta.v1beta.ObjectMeta
	59, // 69: assets.ubika.io.v1beta.TLSMaterialFull.spec:type_name -> assets.ubika.io.v1beta.TLSMaterialFullSpec
	58, // 70: assets.ubika.io.v1beta.TLSMaterialFull.status:type_name -> assets.ubika.io.v1beta.TLSMaterialStatus
	73, // 71: assets.ubika.io.v1beta.TLSManualCreate.metadata:type_name -> meta.v1beta.ObjectMeta
	62, // 72: assets.ubika.io.v1beta.TLSManualCreate.spec:type_name -> assets.ubika.io.v1beta.TLSManualCreateSpec
	74, // 73: assets.ubika.io.v1beta.TLSMaterialFullList.metadata:type_name -> meta.v1beta.ListMeta
	60, // 74: assets.ubika.io.v1beta.TLSMaterialFullList.items:type_name -> assets.ubika.io.v1beta.TLSMaterialFull
	76, // 75: assets.ubika.io.v1beta.TLSConfigurationSpec.protocol_min:type_name -> crypto.TLSProtocol.Enum
	76, // 76: assets.ubika.io.v1beta.TLSConfigurationSpec.protocol_max:type_name -> crypto.TLSProtocol.Enum
	73, // 77: assets.ubika.io.v1beta.TLSConfiguration.metadata:type_name -> meta.v1beta.ObjectMeta
	64, // 78: assets.ubika.io.v1beta.TLSConfiguration.spec:type_name -> assets.ubika.io.v1beta.TLSConfigurationSpec
	74, // 79: assets.ubika.io.v1beta.TLSConfigurationList.metadata:type_name -> meta.v1beta.ListMeta
	65, // 80: assets.ubika.io.v1beta.TLSConfigurationList.items:type_name -> assets.ubika.io.v1beta.TLSConfiguration
	76, // 81: assets.ubika.io.v1beta.TLSConfigurationDefault.protocol_min_default:type_name -> crypto.TLSProtocol.Enum
	76, // 82: assets.ubika.io.v1beta.TLSConfigurationDefault.protocol_max_default:type_name -> crypto.TLSProtocol.Enum
	73, // 83: assets.ubika.io.v1beta.IPBlacklist.metadata:type_name -> meta.v1beta.ObjectMeta
	68, // 84: assets.ubika.io.v1beta.IPBlacklist.spec:type_name -> assets.ubika.io.v1beta.IPBlacklistSpec
	74, // 85: assets.ubika.io.v1beta.IPBlacklistList.metadata:type_name -> meta.v1beta.ListMeta
	69, // 86: assets.ubika.io.v1beta.IPBlacklistList.items:type_name -> assets.ubika.io.v1beta.IPBlacklist
	87, // [87:87] is the sub-list for method output_type
	87, // [87:87] is the sub-list for method input_type
	87, // [87:87] is the sub-list for extension type_name
	87, // [87:87] is the sub-list for extension extendee
	0,  // [0:87] is the sub-list for field type_name
}

func init() { file_lib_proto_assets_ubika_io_v1beta_asset_proto_init() }
func file_lib_proto_assets_ubika_io_v1beta_asset_proto_init() {
	if File_lib_proto_assets_ubika_io_v1beta_asset_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExceptionProfileSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExceptionProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExceptionProfileList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workflow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomWkfModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebSocketSecurityMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebSocketModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPReputationThreat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPReputationModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoIPMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoIPModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPBlacklistModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackendState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackendCertificateCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DnsState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunningState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetTlsState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAPISpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAPI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAPIList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorDocumentSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorDocumentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSRStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSRCreateSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSRCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSRSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSRList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSRFullSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSRFull); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSRCertificateSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSRCertificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSMaterialSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSMaterial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSMaterialList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSMaterialStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSMaterialFullSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSMaterialFull); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSManualCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSManualCreateSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSMaterialFullList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSConfigurationSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSConfigurationList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSConfigurationDefault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPBlacklistSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPBlacklist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPBlacklistList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExceptionProfileSpec_Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes[17].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   63,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lib_proto_assets_ubika_io_v1beta_asset_proto_goTypes,
		DependencyIndexes: file_lib_proto_assets_ubika_io_v1beta_asset_proto_depIdxs,
		EnumInfos:         file_lib_proto_assets_ubika_io_v1beta_asset_proto_enumTypes,
		MessageInfos:      file_lib_proto_assets_ubika_io_v1beta_asset_proto_msgTypes,
	}.Build()
	File_lib_proto_assets_ubika_io_v1beta_asset_proto = out.File
	file_lib_proto_assets_ubika_io_v1beta_asset_proto_rawDesc = nil
	file_lib_proto_assets_ubika_io_v1beta_asset_proto_goTypes = nil
	file_lib_proto_assets_ubika_io_v1beta_asset_proto_depIdxs = nil
}
